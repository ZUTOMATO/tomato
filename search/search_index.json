{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":""},{"location":"#_1","title":"\u5173\u4e8e\u6b64\u7f51\u7ad9","text":"<p>\u8fd9\u91cc\u662fZUTOMATO\u7684\u4e2a\u4eba\u4e3b\u9875</p>"},{"location":"#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u5efa","text":"<p>\u4e4b\u524d\u4e0a\u8bfe\u7684\u7b14\u8bb0\u57fa\u672c\u90fd\u662f\u7eb8\u8d28\u7248\u7684\uff0c\u4f46\u4e0d\u592a\u597d\u4fdd\u5b58\u548c\u5206\u4eab\uff08\u5176\u5b9e\u662f\u81ea\u5df1\u6ca1\u597d\u597d\u653e\uff09\uff0c\u52a0\u4e0a\u53ef\u80fd\u540e\u7eed\u5b66\u7684\u8ba1\u7b97\u673a\u7c7b\u8bfe\u7a0b \u4e5f\u4f1a\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u60f3\u505a\u4e00\u4e9b\u7535\u5b50\u7248\u7684\u7b14\u8bb0\uff0c\u6bd4\u8f83\u65b9\u4fbf\u4e5f\u6bd4\u8f83\u597d\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u3002\u6b64\u5916\u4e5f\u53ef\u4ee5\u5f53\u6210\u5206\u4eab\u65e5\u5e38\u7684\u5730\u70b9\u3002</p>"},{"location":"#_3","title":"\u6211\u4f1a\u5728\u8fd9\u91cc\u653e\u4ec0\u4e48","text":"<p>\u6211\u4f1a\u4e0d\u5b9a\u671f\u5728\u8fd9\u91cc\u653e\u4e00\u4e9b\u8bfe\u7a0b\u603b\u7ed3\u3001\u8bfe\u7a0b\u7b14\u8bb0\u3001\u97f3\u4e50\u611f\u60f3\u4ee5\u53ca\u7f16\u66f2\u6df7\u97f3\u7b14\u8bb0\u3001\u4f5c\u66f2\u7f16\u66f2\u4f5c\u54c1\uff08\u5982\u679c\u81ea\u6211\u611f\u89c9\u8fd8\u884c\u7684\u8bdd\uff09\uff0c\u8fd8\u6709\u53ef\u80fd\u653e\u4e00\u70b9\u65e5\u5e38\u611f\u60f3\u3002</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"md/PY1/","title":"chap 1-4","text":"In\u00a0[30]: Copied! <pre>name = \"ada lovelace\"\n</pre> name = \"ada lovelace\" <p>\u9996\u5b57\u6bcd\u5927\u5199\uff1a</p> In\u00a0[31]: Copied! <pre>print(name.title())\n</pre> print(name.title()) <pre>Ada Lovelace\n</pre> <p>\u5168\u5927\u5199/\u5c0f\u5199\uff1a</p> In\u00a0[32]: Copied! <pre>print(name.upper())\n\nprint(name.lower())\n</pre> print(name.upper())  print(name.lower()) <pre>ADA LOVELACE\nada lovelace\n</pre> In\u00a0[33]: Copied! <pre>first_name = \"ada\"\nlast_name = \"lovelace\"\n</pre> first_name = \"ada\" last_name = \"lovelace\" <p>\u5408\u5e76\u5b57\u7b26\u4e32\uff1a</p> In\u00a0[34]: Copied! <pre>full_name = first_name + \" \" + last_name\nprint(full_name.title())\n</pre> full_name = first_name + \" \" + last_name print(full_name.title()) <pre>Ada Lovelace\n</pre> <p>\u5236\u8868\u7b26\u4e0e\u6362\u884c\u7b26\uff1a</p> In\u00a0[35]: Copied! <pre>print(\"Python\")\n\nprint(\"\\tPython\")\n\nprint(\"Languages:\\nPython\\nC\\nJavaScript\")\n\nprint(\"Languages:\\n\\tPython\\n\\tC\\n\\tJavaScript\")\n</pre> print(\"Python\")  print(\"\\tPython\")  print(\"Languages:\\nPython\\nC\\nJavaScript\")  print(\"Languages:\\n\\tPython\\n\\tC\\n\\tJavaScript\") <pre>Python\n\tPython\nLanguages:\nPython\nC\nJavaScript\nLanguages:\n\tPython\n\tC\n\tJavaScript\n</pre> <p>\u5220\u9664\u7a7a\u767d:</p> In\u00a0[36]: Copied! <pre>favorite_language = \" python \"\n\nfavorite_language\n\nfavorite_language.rstrip() # \u5220\u9664\u53f3\u4fa7\u7a7a\u767d\n\nfavorite_language.lstrip()# \u5220\u9664\u5de6\u4fa7\u7a7a\u767d\n\nfavorite_language.strip() # \u5220\u9664\u4e24\u4fa7\u7a7a\u767d\n</pre> favorite_language = \" python \"  favorite_language  favorite_language.rstrip() # \u5220\u9664\u53f3\u4fa7\u7a7a\u767d  favorite_language.lstrip()# \u5220\u9664\u5de6\u4fa7\u7a7a\u767d  favorite_language.strip() # \u5220\u9664\u4e24\u4fa7\u7a7a\u767d Out[36]: <pre>'python'</pre> <p>str()</p> In\u00a0[37]: Copied! <pre>age = 23\n\nmessage = \"Happy \" + str(age) + \"rd Birthday!\"\n\nprint(message)\n</pre> age = 23  message = \"Happy \" + str(age) + \"rd Birthday!\"  print(message) <pre>Happy 23rd Birthday!\n</pre> In\u00a0[38]: Copied! <pre>bicycles = ['trek', 'cannondale', 'redline', 'specialized']\n\nprint(bicycles)\n\nprint(bicycles[0])\n</pre> bicycles = ['trek', 'cannondale', 'redline', 'specialized']  print(bicycles)  print(bicycles[0]) <pre>['trek', 'cannondale', 'redline', 'specialized']\ntrek\n</pre> <p>\u4fee\u6539\u3001\u6dfb\u52a0\u3001\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20</p> In\u00a0[39]: Copied! <pre>motorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\nmotorcycles[0] = 'ducati' # \u4fee\u6539\u5217\u8868\u5143\u7d20\nprint(motorcycles)\n\nmotorcycles.append('ducati') # \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20\nprint(motorcycles)\n\nmotorcycles.insert(0, 'ducati') # \u5728\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20\nprint(motorcycles)\n\ndel motorcycles[0] # \u5220\u9664\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20\nprint(motorcycles)\n\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\npopped_motorcycle = motorcycles.pop() # \u5f39\u51fa\u5217\u8868\u672b\u5c3e\u5143\u7d20\nprint(motorcycles)\nprint(popped_motorcycle)\n\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\nfirst_owned = motorcycles.pop(0) # \u5f39\u51fa\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20\nprint(f\"The first motorcycle I owned was a {first_owned.title()}.\")\n\nmotorcycles = ['honda', 'yamaha', 'suzuki', 'ducati']\nprint(motorcycles)\nmotorcycles.remove('ducati') # \u5220\u9664\u5217\u8868\u6307\u5b9a\u503c\u5143\u7d20\nprint(motorcycles)\n\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n\ntoo_expensive = 'suzuki'\nmotorcycles.remove(too_expensive)\nprint(motorcycles)\nprint(f\"\\nA {too_expensive.title()} is too expensive for me.\")\n</pre> motorcycles = ['honda', 'yamaha', 'suzuki'] print(motorcycles)  motorcycles[0] = 'ducati' # \u4fee\u6539\u5217\u8868\u5143\u7d20 print(motorcycles)  motorcycles.append('ducati') # \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20 print(motorcycles)  motorcycles.insert(0, 'ducati') # \u5728\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20 print(motorcycles)  del motorcycles[0] # \u5220\u9664\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20 print(motorcycles)  motorcycles = ['honda', 'yamaha', 'suzuki'] print(motorcycles)  popped_motorcycle = motorcycles.pop() # \u5f39\u51fa\u5217\u8868\u672b\u5c3e\u5143\u7d20 print(motorcycles) print(popped_motorcycle)  motorcycles = ['honda', 'yamaha', 'suzuki'] print(motorcycles)  first_owned = motorcycles.pop(0) # \u5f39\u51fa\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20 print(f\"The first motorcycle I owned was a {first_owned.title()}.\")  motorcycles = ['honda', 'yamaha', 'suzuki', 'ducati'] print(motorcycles) motorcycles.remove('ducati') # \u5220\u9664\u5217\u8868\u6307\u5b9a\u503c\u5143\u7d20 print(motorcycles)  motorcycles = ['honda', 'yamaha', 'suzuki'] print(motorcycles)  too_expensive = 'suzuki' motorcycles.remove(too_expensive) print(motorcycles) print(f\"\\nA {too_expensive.title()} is too expensive for me.\") <pre>['honda', 'yamaha', 'suzuki']\n['ducati', 'yamaha', 'suzuki']\n['ducati', 'yamaha', 'suzuki', 'ducati']\n['ducati', 'ducati', 'yamaha', 'suzuki', 'ducati']\n['ducati', 'yamaha', 'suzuki', 'ducati']\n['honda', 'yamaha', 'suzuki']\n['honda', 'yamaha']\nsuzuki\n['honda', 'yamaha', 'suzuki']\nThe first motorcycle I owned was a Honda.\n['honda', 'yamaha', 'suzuki', 'ducati']\n['honda', 'yamaha', 'suzuki']\n['honda', 'yamaha', 'suzuki']\n['honda', 'yamaha']\n\nA Suzuki is too expensive for me.\n</pre> <p>sort()\uff1a\u6c38\u4e45\u6027\u6392\u5e8f</p> In\u00a0[40]: Copied! <pre>cars = ['bmw', 'audi', 'toyota', 'subaru']\ncars.sort()  # \u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u5217\u8868\nprint(cars)\n\ncars.sort(reverse=True)  # \u6309\u5b57\u6bcd\u9006\u5e8f\u6392\u5217\u5217\u8868\nprint(cars)\n</pre> cars = ['bmw', 'audi', 'toyota', 'subaru'] cars.sort()  # \u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u5217\u8868 print(cars)  cars.sort(reverse=True)  # \u6309\u5b57\u6bcd\u9006\u5e8f\u6392\u5217\u5217\u8868 print(cars) <pre>['audi', 'bmw', 'subaru', 'toyota']\n['toyota', 'subaru', 'bmw', 'audi']\n</pre> <p>sorted()\uff1a\u4e34\u65f6\u6392\u5e8f</p> In\u00a0[41]: Copied! <pre>cars = ['bmw', 'audi', 'toyota', 'subaru']\nprint(sorted(cars))  # \u4e34\u65f6\u6392\u5e8f\nprint(cars)  # \u539f\u5217\u8868\u672a\u6539\u53d8\n</pre> cars = ['bmw', 'audi', 'toyota', 'subaru'] print(sorted(cars))  # \u4e34\u65f6\u6392\u5e8f print(cars)  # \u539f\u5217\u8868\u672a\u6539\u53d8 <pre>['audi', 'bmw', 'subaru', 'toyota']\n['bmw', 'audi', 'toyota', 'subaru']\n</pre> <p>\u5012\u7740\u6253\u5370\u5217\u8868(\u6c38\u4e45\u6027)</p> In\u00a0[42]: Copied! <pre>cars = ['bmw', 'audi', 'toyota', 'subaru']\ncars.reverse()  # \u5012\u7740\u6253\u5370\u5217\u8868\nprint(cars)\n</pre> cars = ['bmw', 'audi', 'toyota', 'subaru'] cars.reverse()  # \u5012\u7740\u6253\u5370\u5217\u8868 print(cars) <pre>['subaru', 'toyota', 'audi', 'bmw']\n</pre> <p>\u5217\u8868\u957f\u5ea6</p> In\u00a0[43]: Copied! <pre>len(cars)\n</pre> len(cars) Out[43]: <pre>4</pre> <p>\u904d\u5386\u6574\u4e2a\u5217\u8868\uff1a</p> In\u00a0[44]: Copied! <pre>magicians = ['alice', 'david', 'carolina']\nfor magician in magicians:\n\tprint(magician)\n</pre> magicians = ['alice', 'david', 'carolina'] for magician in magicians: \tprint(magician) <pre>alice\ndavid\ncarolina\n</pre> <p>\u521b\u5efa\u6570\u5b57\u5217\u8868\uff1arange()\uff1a</p> In\u00a0[45]: Copied! <pre>for value in range(1,5):\n\tprint(value)\n</pre> for value in range(1,5): \tprint(value) <pre>1\n2\n3\n4\n</pre> In\u00a0[46]: Copied! <pre>numbers = list(range(1,6)) # \u521b\u5efa\u6570\u5b57\u5217\u8868\uff0c\u4ece1\u52305\nprint(numbers)\n</pre> numbers = list(range(1,6)) # \u521b\u5efa\u6570\u5b57\u5217\u8868\uff0c\u4ece1\u52305 print(numbers) <pre>[1, 2, 3, 4, 5]\n</pre> In\u00a0[47]: Copied! <pre>even_numbers = list(range(2,11,2)) # \u521b\u5efa\u5076\u6570\u5217\u8868\uff0c\u6307\u5b9a\u6b65\u957f\nprint(even_numbers)\n</pre> even_numbers = list(range(2,11,2)) # \u521b\u5efa\u5076\u6570\u5217\u8868\uff0c\u6307\u5b9a\u6b65\u957f print(even_numbers) <pre>[2, 4, 6, 8, 10]\n</pre> In\u00a0[48]: Copied! <pre>squares = []\nfor value in range(1,11): \n\tsquare = value**2\n\tsquares.append(square)\nprint(squares)\n\n#\u6216\uff1a\nsquares = [value**2 for value in range(1,11)]\nprint(squares)\n</pre> squares = [] for value in range(1,11):  \tsquare = value**2 \tsquares.append(square) print(squares)  #\u6216\uff1a squares = [value**2 for value in range(1,11)] print(squares) <pre>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n</pre> In\u00a0[49]: Copied! <pre># \u91ca\u653e\u4e4b\u524d\u7684\u53d8\u91cf\u5185\u5b58\ndel age, bicycles, cars, favorite_language, first_name, first_owned, full_name, last_name\ndel message, motorcycles, name, numbers, popped_motorcycle, square, squares, too_expensive, value\n</pre> # \u91ca\u653e\u4e4b\u524d\u7684\u53d8\u91cf\u5185\u5b58 del age, bicycles, cars, favorite_language, first_name, first_owned, full_name, last_name del message, motorcycles, name, numbers, popped_motorcycle, square, squares, too_expensive, value In\u00a0[50]: Copied! <pre>digits = [1,2,3,4,5,6,7,8,9,0]\nprint(min(digits)) # \u6700\u5c0f\u503c\nprint(max(digits)) # \u6700\u5927\u503c\nprint(sum(digits)) # \u603b\u548c\n</pre> digits = [1,2,3,4,5,6,7,8,9,0] print(min(digits)) # \u6700\u5c0f\u503c print(max(digits)) # \u6700\u5927\u503c print(sum(digits)) # \u603b\u548c <pre>0\n9\n45\n</pre> <p>\u5207\u7247\uff1a</p> In\u00a0[51]: Copied! <pre>players = ['charles', 'martina', 'michael', 'florence', 'eli']\nprint(players[0:3])  # \u6253\u5370\u524d\u4e09\u540d\u9009\u624b\nprint(players[1:4])  # \u6253\u5370\u7b2c\u4e8c\u5230\u7b2c\u56db\u540d\u9009\u624b\nprint(players[-3:])   # \u6253\u5370\u6700\u540e\u4e09\u540d\u9009\u624b\nprint(players[:3])  # \u6253\u5370\u524d\u4e09\u540d\u9009\u624b\nprint(players[2:])  # \u6253\u5370\u7b2c\u4e09\u540d\u53ca\u4e4b\u540e\u7684\u9009\u624b\n</pre> players = ['charles', 'martina', 'michael', 'florence', 'eli'] print(players[0:3])  # \u6253\u5370\u524d\u4e09\u540d\u9009\u624b print(players[1:4])  # \u6253\u5370\u7b2c\u4e8c\u5230\u7b2c\u56db\u540d\u9009\u624b print(players[-3:])   # \u6253\u5370\u6700\u540e\u4e09\u540d\u9009\u624b print(players[:3])  # \u6253\u5370\u524d\u4e09\u540d\u9009\u624b print(players[2:])  # \u6253\u5370\u7b2c\u4e09\u540d\u53ca\u4e4b\u540e\u7684\u9009\u624b <pre>['charles', 'martina', 'michael']\n['martina', 'michael', 'florence']\n['michael', 'florence', 'eli']\n['charles', 'martina', 'michael']\n['michael', 'florence', 'eli']\n</pre> <p>\u904d\u5386\u5207\u7247</p> In\u00a0[52]: Copied! <pre>for player in players[:3]:\n\tprint(player.title())\n</pre> for player in players[:3]: \tprint(player.title()) <pre>Charles\nMartina\nMichael\n</pre> <p>\u590d\u5236\u5217\u8868\uff1a</p> In\u00a0[57]: Copied! <pre>my_foods = ['pizza', 'carrot cake', 'falafel']\nfriend_foods = my_foods[:]\nprint(\"My favorite foods are:\")\nprint(my_foods)\nprint(\"\\nMy friend's favorite foods are:\")\nprint(friend_foods)\n</pre> my_foods = ['pizza', 'carrot cake', 'falafel'] friend_foods = my_foods[:] print(\"My favorite foods are:\") print(my_foods) print(\"\\nMy friend's favorite foods are:\") print(friend_foods) <pre>My favorite foods are:\n['pizza', 'carrot cake', 'falafel']\n\nMy friend's favorite foods are:\n['pizza', 'carrot cake', 'falafel']\n</pre> <p>\u53e6\uff1a\u6309\u957f\u5ea6\u6392\u5e8f</p> In\u00a0[58]: Copied! <pre>my_foods.sort(key=len)\nprint(my_foods)\n</pre> my_foods.sort(key=len) print(my_foods) <pre>['pizza', 'falafel', 'carrot cake']\n</pre> <p>\u53e6\uff1a\u4e8c\u5206\u641c\u7d22\u548c\u5df2\u6392\u5e8f\u5217\u8868\u7684\u7ef4\u62a4</p> In\u00a0[60]: Copied! <pre>import bisect\n\nc = [1, 2, 2, 2, 3, 4, 7]\nprint(bisect.bisect(c,2))\nprint(bisect.bisect(c,6))\nbisect.insort(c,6)\nprint(c)\n</pre> import bisect  c = [1, 2, 2, 2, 3, 4, 7] print(bisect.bisect(c,2)) print(bisect.bisect(c,6)) bisect.insort(c,6) print(c) <pre>4\n6\n[1, 2, 2, 2, 3, 4, 6, 7]\n</pre> In\u00a0[\u00a0]: Copied! <pre>dimension = (200,50)\nprint(dimension[0])  # \u6253\u5370\u5143\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\nprint(dimension[1])  # \u6253\u5370\u5143\u7ec4\u7b2c\u4e8c\u4e2a\u5143\u7d20\nprint(dimension)\n# \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e0d\u80fd\u4fee\u6539\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u53ea\u80fd\u91cd\u65b0\u5b9a\u4e49\u6574\u4e2a\u5143\u7ec4\n# dimension[0] = 250  # \u8fd9\u884c\u4ee3\u7801\u4f1a\u62a5\u9519\n# \u5143\u7ec4\u540c\u6837\u53ef\u4ee5\u7528for\u5faa\u73af\u904d\u5386\nfor dim in dimension:\n\tprint(dim)\n</pre> dimension = (200,50) print(dimension[0])  # \u6253\u5370\u5143\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20 print(dimension[1])  # \u6253\u5370\u5143\u7ec4\u7b2c\u4e8c\u4e2a\u5143\u7d20 print(dimension) # \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e0d\u80fd\u4fee\u6539\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u53ea\u80fd\u91cd\u65b0\u5b9a\u4e49\u6574\u4e2a\u5143\u7ec4 # dimension[0] = 250  # \u8fd9\u884c\u4ee3\u7801\u4f1a\u62a5\u9519 # \u5143\u7ec4\u540c\u6837\u53ef\u4ee5\u7528for\u5faa\u73af\u904d\u5386 for dim in dimension: \tprint(dim) <pre>200\n50\n(200, 50)\n200\n50\n</pre>"},{"location":"md/PY1/#chap-1-2","title":"chap 1-2 \u53d8\u91cf\u4e0e\u7b80\u5355\u6570\u636e\u7c7b\u578b\u00b6","text":""},{"location":"md/PY1/#chap-3","title":"chap 3 \u5217\u8868\u00b6","text":""},{"location":"md/PY1/#chap-4","title":"chap 4 \u64cd\u4f5c\u5217\u8868\u00b6","text":""},{"location":"md/PY1/#for","title":"for\u5faa\u73af\uff1a\u00b6","text":"<ul> <li>\u6ce8\u610f\u7f29\u8fdb</li> <li>\u6ce8\u610f\u5192\u53f7</li> </ul>"},{"location":"md/PY1/","title":"\u5bf9\u6570\u5b57\u5217\u8868\u505a\u7edf\u8ba1\u8ba1\u7b97\uff1a\u00b6","text":""},{"location":"md/PY1/","title":"\u4f7f\u7528\u5217\u8868\u7684\u4e00\u90e8\u5206\u00b6","text":""},{"location":"md/PY1/","title":"\u5143\u7ec4\u00b6","text":""},{"location":"md/PY2/","title":"chap 5-8","text":"In\u00a0[1]: Copied! <pre>cars = [\"audi\", \"bmw\", \"subaru\", \"toyota\"]\n\nfor car in cars:\n\tif car == \"bmw\":\n\t\tprint(car.upper())\n\telse:\n\t\tprint(car.title())\n</pre> cars = [\"audi\", \"bmw\", \"subaru\", \"toyota\"]  for car in cars: \tif car == \"bmw\": \t\tprint(car.upper()) \telse: \t\tprint(car.title()) <pre>Audi\nBMW\nSubaru\nToyota\n</pre> <p>and/or\uff1a</p> In\u00a0[2]: Copied! <pre>age_0 = 22\nage_1 = 18\nprint(age_0 &gt;= 21 and age_1 &gt;= 21)\nprint(age_0 &gt;= 21 or age_1 &gt;= 21)\n</pre> age_0 = 22 age_1 = 18 print(age_0 &gt;= 21 and age_1 &gt;= 21) print(age_0 &gt;= 21 or age_1 &gt;= 21) <pre>False\nTrue\n</pre> <p>\u68c0\u67e5\u7279\u5b9a\u503c\u662f\u5426\u4e0d\u5305\u542b\u5728\u5217\u8868\u4e2d\uff1a</p> In\u00a0[3]: Copied! <pre>banned_users = ['andrew', 'carolina', 'david']\nuser = 'marie'\n\nif user not in banned_users:\n\tprint(user.title() + \", you can post a response if you wish.\")\n</pre> banned_users = ['andrew', 'carolina', 'david'] user = 'marie'  if user not in banned_users: \tprint(user.title() + \", you can post a response if you wish.\") <pre>Marie, you can post a response if you wish.\n</pre> <p>if-else\u8bed\u53e5\uff1a</p> In\u00a0[4]: Copied! <pre>age = 17\nif age &gt;= 18:\n\tprint(\"You are old enough to vote!\")\n\tprint(\"Have you registered to vote yet?\")\nelse:\n\tprint(\"Sorry, you are too young to vote.\")\n\tprint(\"Please register to vote as soon as you turn 18!\")\n</pre> age = 17 if age &gt;= 18: \tprint(\"You are old enough to vote!\") \tprint(\"Have you registered to vote yet?\") else: \tprint(\"Sorry, you are too young to vote.\") \tprint(\"Please register to vote as soon as you turn 18!\") <pre>Sorry, you are too young to vote.\nPlease register to vote as soon as you turn 18!\n</pre> <p>\u786e\u5b9a\u5217\u8868\u4e0d\u662f\u7a7a\u7684\uff1a</p> In\u00a0[5]: Copied! <pre>requeseted_toppings = []\n\nif requeseted_toppings:\n\tfor topping in requeseted_toppings:\n\t\tprint(\"Adding \" + topping + \".\")\n\tprint(\"\\nFinished making your pizza!\")\nelse:\n\tprint(\"Are you sure you want a plain pizza?\")\n</pre> requeseted_toppings = []  if requeseted_toppings: \tfor topping in requeseted_toppings: \t\tprint(\"Adding \" + topping + \".\") \tprint(\"\\nFinished making your pizza!\") else: \tprint(\"Are you sure you want a plain pizza?\") <pre>Are you sure you want a plain pizza?\n</pre> In\u00a0[6]: Copied! <pre>alien_0 = {'color': 'green', 'points': 5} #\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\nprint(alien_0['color']) #\u8bbf\u95ee\u5b57\u5178\u4e2d\u7684\u503c\nprint(alien_0['points'])\n</pre> alien_0 = {'color': 'green', 'points': 5} #\u521b\u5efa\u4e00\u4e2a\u5b57\u5178 print(alien_0['color']) #\u8bbf\u95ee\u5b57\u5178\u4e2d\u7684\u503c print(alien_0['points']) <pre>green\n5\n</pre> <p>\u6dfb\u52a0\u952e-\u503c\u5bf9\uff1a</p> In\u00a0[7]: Copied! <pre>alien_0['x_position'] = 0 \nalien_0['y_position'] = 25\nprint(alien_0)\n</pre> alien_0['x_position'] = 0  alien_0['y_position'] = 25 print(alien_0) <pre>{'color': 'green', 'points': 5, 'x_position': 0, 'y_position': 25}\n</pre> In\u00a0[8]: Copied! <pre>del age, cars, car, age_0, age_1, banned_users, user, requeseted_toppings, alien_0\n</pre> del age, cars, car, age_0, age_1, banned_users, user, requeseted_toppings, alien_0 <p>\u904d\u5386\u5b57\u5178</p> In\u00a0[9]: Copied! <pre>user_0 = {\n\t'username':'efermi',\n\t'first':'enrico',\n\t'last':'fermi'\n}\n\nfor keys, values in user_0.items():\n\tprint(\"\\nKey: \" + keys)\n\tprint(\"Value: \" + values)\n</pre> user_0 = { \t'username':'efermi', \t'first':'enrico', \t'last':'fermi' }  for keys, values in user_0.items(): \tprint(\"\\nKey: \" + keys) \tprint(\"Value: \" + values) <pre>\nKey: username\nValue: efermi\n\nKey: first\nValue: enrico\n\nKey: last\nValue: fermi\n</pre> <p>\u904d\u5386\u952e\u6216\u503c</p> In\u00a0[10]: Copied! <pre>for a in user_0.keys():\n\tprint(a.title())\n\nfor a in user_0.values():\n\tprint(a.title())\n\nfor a in set(user_0.keys()): #\u53bb\u9664\u91cd\u590d\u9879\n\tprint(a.title())\n</pre> for a in user_0.keys(): \tprint(a.title())  for a in user_0.values(): \tprint(a.title())  for a in set(user_0.keys()): #\u53bb\u9664\u91cd\u590d\u9879 \tprint(a.title()) <pre>Username\nFirst\nLast\nEfermi\nEnrico\nFermi\nUsername\nFirst\nLast\n</pre> <p>\u8fd9\u91cc set() \u662f\u96c6\u5408\u51fd\u6570\uff0c\u5c06\u53d8\u91cf\u53d8\u4e3a\u96c6\u5408</p> <p>\u4ea4\u3001\u5e76\u3001\u5bf9\u79f0\u5dee</p> In\u00a0[11]: Copied! <pre>a = {1, 2, 3, 4, 5}\nb = {3, 4, 5, 6, 7, 8}\n\nprint(a.union(b)) \nprint(a | b) #\u5e76\u96c6\n\nprint(a &amp; b) #\u4ea4\u96c6\n\nprint(a ^ b) #\u5bf9\u79f0\u5dee\n</pre> a = {1, 2, 3, 4, 5} b = {3, 4, 5, 6, 7, 8}  print(a.union(b))  print(a | b) #\u5e76\u96c6  print(a &amp; b) #\u4ea4\u96c6  print(a ^ b) #\u5bf9\u79f0\u5dee <pre>{1, 2, 3, 4, 5, 6, 7, 8}\n{1, 2, 3, 4, 5, 6, 7, 8}\n{3, 4, 5}\n{1, 2, 6, 7, 8}\n</pre> <p>\u68c0\u67e5\u96c6\u5408\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5b50\u96c6</p> In\u00a0[12]: Copied! <pre>a_set = set(range(1, 5))\nprint(set(range(1, 4)).issubset(a_set))\nprint(a_set.issuperset(set(range(1, 4))))\n</pre> a_set = set(range(1, 5)) print(set(range(1, 4)).issubset(a_set)) print(a_set.issuperset(set(range(1, 4)))) <pre>True\nTrue\n</pre> <p>input()</p> In\u00a0[13]: Copied! <pre>message = input(\"abc\")\nprint(message) #\u8f93\u5165\u7684\u5185\u5bb9\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\u683c\u5f0f\uff0c\u5982\u8981\u8f6c\u6362\u5219\u7528int()\u7b49\u51fd\u6570\n</pre> message = input(\"abc\") print(message) #\u8f93\u5165\u7684\u5185\u5bb9\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\u683c\u5f0f\uff0c\u5982\u8981\u8f6c\u6362\u5219\u7528int()\u7b49\u51fd\u6570 <pre>a\n</pre> <p>while\u5faa\u73af</p> In\u00a0[14]: Copied! <pre>message = \"\"\nwhile message != 'quit':\n\tmessage = input()\n\tif message != 'quit':\n\t\tprint(message)\n</pre> message = \"\" while message != 'quit': \tmessage = input() \tif message != 'quit': \t\tprint(message) <pre>a\na\na\na\na\na\na\na\na\na\na\na\na\n\na\na\n\na\na\n\naaaa\naa\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n</pre> <p>break\u548ccontinue\u7684\u7528\u6cd5\u548cC\u8bed\u8a00\u4e00\u6837</p> In\u00a0[15]: Copied! <pre>def f(x, y, z=1.5): #\u5b9a\u4e49\u4e86z\u7684\u9ed8\u8ba4\u503c\n\tif z &gt; 1:\n\t\treturn z * (x + y)\n\telse:\n\t\treturn z / (x + y)\n\nprint(f(5, 6, z=0.7))\nprint(f(3.14, 7, 3.5))\nprint(f(10, 20))\n</pre> def f(x, y, z=1.5): #\u5b9a\u4e49\u4e86z\u7684\u9ed8\u8ba4\u503c \tif z &gt; 1: \t\treturn z * (x + y) \telse: \t\treturn z / (x + y)  print(f(5, 6, z=0.7)) print(f(3.14, 7, 3.5)) print(f(10, 20)) <pre>0.06363636363636363\n35.49\n45.0\n</pre> <p>\u547d\u540d\u7a7a\u95f4\u3001\u4f5c\u7528\u57df\u548c\u672c\u5730\u51fd\u6570</p> In\u00a0[16]: Copied! <pre>def func():\n\ta = []\n\tfor i in range(5):\n\t\ta.append(i) #\u8fd9\u91cc\u7684a\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u9000\u51fa\u65f6\u4f1a\u88ab\u9500\u6bc1\n\na = []\ndef func():\n\tfor i in range(5):\n\t\ta.append(i) #\u8fd9\u91cca\u5728\u51fd\u6570\u5916\u90e8\u88ab\u8d4b\u503c\n\ndef func():\n\tglobal a\n\ta = []\n\tfor i in range(5):\n\t\ta.append(i) #\u8fd9\u91cca\u88ab\u5b9a\u4e49\u4e3a\u5168\u5c40\u53d8\u91cf\n</pre> def func(): \ta = [] \tfor i in range(5): \t\ta.append(i) #\u8fd9\u91cc\u7684a\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u9000\u51fa\u65f6\u4f1a\u88ab\u9500\u6bc1  a = [] def func(): \tfor i in range(5): \t\ta.append(i) #\u8fd9\u91cca\u5728\u51fd\u6570\u5916\u90e8\u88ab\u8d4b\u503c  def func(): \tglobal a \ta = [] \tfor i in range(5): \t\ta.append(i) #\u8fd9\u91cca\u88ab\u5b9a\u4e49\u4e3a\u5168\u5c40\u53d8\u91cf <p>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u5bf9\u8c61</p> In\u00a0[17]: Copied! <pre>states = ['   Alabama  ', 'Georgia!', 'Georgia', 'georgia', 'FlOrIda', 'south     carolina##', 'West virginia?']\nimport re\n\ndef remove_punctuation(value):\n\treturn re.sub('[!#?]', '', value)\n\nclean_ops = [str.strip, remove_punctuation, str.title]\n\ndef clean_strings(strings, ops):\n\tresult = []\n\tfor value in strings:\n\t\tfor function in ops:\n\t\t\tvalue = function(value)\n\t\tresult.append(value)\n\treturn result\nclean_strings(states, clean_ops)\n</pre> states = ['   Alabama  ', 'Georgia!', 'Georgia', 'georgia', 'FlOrIda', 'south     carolina##', 'West virginia?'] import re  def remove_punctuation(value): \treturn re.sub('[!#?]', '', value)  clean_ops = [str.strip, remove_punctuation, str.title]  def clean_strings(strings, ops): \tresult = [] \tfor value in strings: \t\tfor function in ops: \t\t\tvalue = function(value) \t\tresult.append(value) \treturn result clean_strings(states, clean_ops) Out[17]: <pre>['Alabama',\n 'Georgia',\n 'Georgia',\n 'Georgia',\n 'Florida',\n 'South     Carolina',\n 'West Virginia']</pre> <p>\u533f\u540d\uff08Lamda\uff09\u51fd\u6570</p> In\u00a0[18]: Copied! <pre>def function(x):\n\treturn x * 2\n\nequiv_anon = lambda x: x * 2\n</pre> def function(x): \treturn x * 2  equiv_anon = lambda x: x * 2"},{"location":"md/PY2/#chap-5-if","title":"chap 5 if\u8bed\u53e5\u00b6","text":""},{"location":"md/PY2/#chap-6","title":"chap 6 \u5b57\u5178\u00b6","text":""},{"location":"md/PY2/","title":"\u8865\u5145\uff1a\u96c6\u5408\u00b6","text":""},{"location":"md/PY2/#chap-7-while","title":"chap 7 \u7528\u6237\u8f93\u5165\u548cwhile\u5faa\u73af\u00b6","text":""},{"location":"md/PY2/#chap-8","title":"chap 8 \u51fd\u6570\u00b6","text":""},{"location":"md/PY3/","title":"PY3","text":"<p>\u521b\u5efa\u548c\u4f7f\u7528\u7c7b</p> In\u00a0[1]: Copied! <pre>class Dog():\n\t\"\"\"\u4e00\u6b21\u6a21\u62df\u5c0f\u72d7\u7684\u7b80\u5355\u5c1d\u8bd5\"\"\"\n\n\tdef __init__(self, name, age):\n\t\t\"\"\"\u521d\u59cb\u5316\u5c5e\u6027name\u548cage\"\"\"\n\t\tself.name = name\n\t\tself.age = age\n\t\t\n\tdef sit(self):\n\t\t\"\"\"\u6a21\u62df\u5c0f\u72d7\u8e72\u4e0b\"\"\"\n\t\tprint(self.name.title() + \" is now sitting.\")\n\t\n\tdef roll_over(self):\n\t\t\"\"\"\u6a21\u62df\u5c0f\u72d7\u6253\u6eda\"\"\"\n\t\tprint(self.name.title() + \" rolled over.\")\n</pre> class Dog(): \t\"\"\"\u4e00\u6b21\u6a21\u62df\u5c0f\u72d7\u7684\u7b80\u5355\u5c1d\u8bd5\"\"\"  \tdef __init__(self, name, age): \t\t\"\"\"\u521d\u59cb\u5316\u5c5e\u6027name\u548cage\"\"\" \t\tself.name = name \t\tself.age = age \t\t \tdef sit(self): \t\t\"\"\"\u6a21\u62df\u5c0f\u72d7\u8e72\u4e0b\"\"\" \t\tprint(self.name.title() + \" is now sitting.\") \t \tdef roll_over(self): \t\t\"\"\"\u6a21\u62df\u5c0f\u72d7\u6253\u6eda\"\"\" \t\tprint(self.name.title() + \" rolled over.\")"},{"location":"md/PY3/","title":"\u7c7b\u00b6","text":""},{"location":"md/numpy1/","title":"Numpy","text":"In\u00a0[606]: Copied! <pre>import numpy as np\n</pre> import numpy as np In\u00a0[607]: Copied! <pre>data = np.random.randn(2, 3) #\u751f\u6210\u4e00\u4e2a2\u884c3\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4\nprint(data)\nprint(data.shape) #\u8f93\u51fa\u6570\u7ec4\u7684\u5f62\u72b6\nprint(data.dtype) #\u8f93\u51fa\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\n</pre> data = np.random.randn(2, 3) #\u751f\u6210\u4e00\u4e2a2\u884c3\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4 print(data) print(data.shape) #\u8f93\u51fa\u6570\u7ec4\u7684\u5f62\u72b6 print(data.dtype) #\u8f93\u51fa\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b <pre>[[ 1.64084257  1.73985329 -0.40436881]\n [-1.21210161  0.56489944  0.93753172]]\n(2, 3)\nfloat64\n</pre> <p>\u751f\u6210ndarray</p> In\u00a0[608]: Copied! <pre>data1 = [6, 7.5, 8, 0, 1]\narr1 = np.array(data1) #\u5c06\u5217\u8868\u8f6c\u6362\u4e3andarray\nprint(arr1)\n\ndata2 =[[1, 2, 3, 4], [5, 6, 7, 8]] #\u5c06\u5d4c\u5957\u5217\u8868\u8f6c\u6362\u4e3andarray\narr2 = np.array(data2)\nprint(arr2)\nprint(arr2.ndim)\nprint(arr2.shape)\nprint(arr2.dtype)\n</pre> data1 = [6, 7.5, 8, 0, 1] arr1 = np.array(data1) #\u5c06\u5217\u8868\u8f6c\u6362\u4e3andarray print(arr1)  data2 =[[1, 2, 3, 4], [5, 6, 7, 8]] #\u5c06\u5d4c\u5957\u5217\u8868\u8f6c\u6362\u4e3andarray arr2 = np.array(data2) print(arr2) print(arr2.ndim) print(arr2.shape) print(arr2.dtype) <pre>[6.  7.5 8.  0.  1. ]\n[[1 2 3 4]\n [5 6 7 8]]\n2\n(2, 4)\nint64\n</pre> In\u00a0[609]: Copied! <pre>print(np.zeros(10)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b10\u4e2a0\u7684ndarray\nprint(np.zeros((3, 6))) #\u751f\u6210\u4e00\u4e2a3\u884c6\u5217\u7684ndarray\uff0c\u5143\u7d20\u4e3a0\nprint(np.empty((2, 3, 2))) #\u751f\u6210\u4e00\u4e2a2\u884c3\u52172\u5c42\u7684ndarray\uff0c\u5143\u7d20\u4e3a0\uff0c\u6709\u53ef\u80fd\u4e0d\u5b89\u5168\uff0c\u6709\u65f6\u5019\u8fd4\u56de\u672a\u521d\u59cb\u5316\u7684\u5783\u573e\u6570\u503c\nprint(np.arange(15)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b0\u523014\u7684ndarray\nprint(np.arange(5,8)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b5\u52307\u7684ndarray\nprint(np.arange(5,20,3)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b5\u523019\uff0c\u6b65\u957f\u4e3a3\u7684ndarray\n</pre> print(np.zeros(10)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b10\u4e2a0\u7684ndarray print(np.zeros((3, 6))) #\u751f\u6210\u4e00\u4e2a3\u884c6\u5217\u7684ndarray\uff0c\u5143\u7d20\u4e3a0 print(np.empty((2, 3, 2))) #\u751f\u6210\u4e00\u4e2a2\u884c3\u52172\u5c42\u7684ndarray\uff0c\u5143\u7d20\u4e3a0\uff0c\u6709\u53ef\u80fd\u4e0d\u5b89\u5168\uff0c\u6709\u65f6\u5019\u8fd4\u56de\u672a\u521d\u59cb\u5316\u7684\u5783\u573e\u6570\u503c print(np.arange(15)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b0\u523014\u7684ndarray print(np.arange(5,8)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b5\u52307\u7684ndarray print(np.arange(5,20,3)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b5\u523019\uff0c\u6b65\u957f\u4e3a3\u7684ndarray <pre>[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n[[0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0.]]\n[[[5. 5.]\n  [5. 5.]\n  [3. 3.]]\n\n [[3. 3.]\n  [1. 1.]\n  [1. 1.]]]\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n[5 6 7]\n[ 5  8 11 14 17]\n</pre> <p>ndarray\u7684\u6570\u636e\u7c7b\u578b</p> In\u00a0[610]: Copied! <pre>arr1 = np.array([1, 2, 3], dtype=np.float64) #\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u4e3afloat64\narr2 = np.array([1, 2, 3], dtype=np.int32) #\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u4e3aint32\n\nprint(arr1.dtype)\nprint(arr2.dtype)\n\narr = np.array([1, 2, 3, 4, 5])\nprint(arr.dtype) #\u8f93\u51fa\u5f53\u524d\u6570\u636e\u7c7b\u578b\nfloat_arr = arr.astype(np.float64) #\u5c06\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3afloat64\nprint(float_arr)\nprint(float_arr.dtype)\n</pre> arr1 = np.array([1, 2, 3], dtype=np.float64) #\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u4e3afloat64 arr2 = np.array([1, 2, 3], dtype=np.int32) #\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u4e3aint32  print(arr1.dtype) print(arr2.dtype)  arr = np.array([1, 2, 3, 4, 5]) print(arr.dtype) #\u8f93\u51fa\u5f53\u524d\u6570\u636e\u7c7b\u578b float_arr = arr.astype(np.float64) #\u5c06\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3afloat64 print(float_arr) print(float_arr.dtype) <pre>float64\nint32\nint64\n[1. 2. 3. 4. 5.]\nfloat64\n</pre> <p>\u5982\u679c\u628a\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u6574\u6570\u5219\u5c0f\u6570\u70b9\u540e\u7684\u90e8\u5206\u88ab\u6d88\u9664</p> <p>\u5bf9\u5e94\u5143\u7d20\u9010\u4e2a\u8fdb\u884c\u8fd0\u7b97</p> In\u00a0[611]: Copied! <pre>arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(arr)\nprint(arr * arr) #\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\nprint(arr - arr) #\u5bf9\u5e94\u5143\u7d20\u76f8\u51cf\nprint(1 / arr) #\u5bf9\u5e94\u5143\u7d20\u76f8\u9664\nprint(arr ** 2) #\u5bf9\u5e94\u5143\u7d20\u5e73\u65b9\narr2 = np.array([[0, 4, 1], [7, 2, 12]])\nprint(arr2)\nprint(arr2 &gt; arr) #\u5bf9\u5e94\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\n</pre> arr = np.array([[1, 2, 3], [4, 5, 6]]) print(arr) print(arr * arr) #\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58 print(arr - arr) #\u5bf9\u5e94\u5143\u7d20\u76f8\u51cf print(1 / arr) #\u5bf9\u5e94\u5143\u7d20\u76f8\u9664 print(arr ** 2) #\u5bf9\u5e94\u5143\u7d20\u5e73\u65b9 arr2 = np.array([[0, 4, 1], [7, 2, 12]]) print(arr2) print(arr2 &gt; arr) #\u5bf9\u5e94\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 <pre>[[1 2 3]\n [4 5 6]]\n[[ 1  4  9]\n [16 25 36]]\n[[0 0 0]\n [0 0 0]]\n[[1.         0.5        0.33333333]\n [0.25       0.2        0.16666667]]\n[[ 1  4  9]\n [16 25 36]]\n[[ 0  4  1]\n [ 7  2 12]]\n[[False  True False]\n [ True False  True]]\n</pre> In\u00a0[612]: Copied! <pre>arr = np.arange(10)\nprint(arr)\nprint(arr[5]) #\u7d22\u5f15\u7b2c6\u4e2a\u5143\u7d20\nprint(arr[5:8]) #\u5207\u7247\u7b2c6\u52308\u4e2a\u5143\u7d20\narr[5:8] = 12 #\u5c06\u7b2c6\u52308\u4e2a\u5143\u7d20\u8d4b\u503c\u4e3a12\nprint(arr)\narr_slice = arr[5:8] #\u5c06\u5207\u7247\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u53d8\u91cf\nprint(arr_slice)\narr_slice[1] = 12345 #\u4fee\u6539\u5207\u7247\u4e2d\u7684\u5143\u7d20\nprint(arr) #\u539f\u6570\u7ec4\u4e5f\u88ab\u4fee\u6539\u4e86\uff0c\u56e0\u4e3a\u5207\u7247\u662f\u539f\u6570\u7ec4\u7684\u89c6\u56fe\narr_slice[:] = 64 #\u5c06\u5207\u7247\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8d4b\u503c\u4e3a64\nprint(arr) #\u539f\u6570\u7ec4\u4e5f\u88ab\u4fee\u6539\u4e86\n</pre> arr = np.arange(10) print(arr) print(arr[5]) #\u7d22\u5f15\u7b2c6\u4e2a\u5143\u7d20 print(arr[5:8]) #\u5207\u7247\u7b2c6\u52308\u4e2a\u5143\u7d20 arr[5:8] = 12 #\u5c06\u7b2c6\u52308\u4e2a\u5143\u7d20\u8d4b\u503c\u4e3a12 print(arr) arr_slice = arr[5:8] #\u5c06\u5207\u7247\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u53d8\u91cf print(arr_slice) arr_slice[1] = 12345 #\u4fee\u6539\u5207\u7247\u4e2d\u7684\u5143\u7d20 print(arr) #\u539f\u6570\u7ec4\u4e5f\u88ab\u4fee\u6539\u4e86\uff0c\u56e0\u4e3a\u5207\u7247\u662f\u539f\u6570\u7ec4\u7684\u89c6\u56fe arr_slice[:] = 64 #\u5c06\u5207\u7247\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8d4b\u503c\u4e3a64 print(arr) #\u539f\u6570\u7ec4\u4e5f\u88ab\u4fee\u6539\u4e86 <pre>[0 1 2 3 4 5 6 7 8 9]\n5\n[5 6 7]\n[ 0  1  2  3  4 12 12 12  8  9]\n[12 12 12]\n[    0     1     2     3     4    12 12345    12     8     9]\n[ 0  1  2  3  4 64 64 64  8  9]\n</pre> <p>\u5982\u679c\u4f20\u5165\u4e86\u4e00\u4e2a\u6570\u503c\u7ed9\u6570\u7ec4\u7684\u5207\u7247\uff0c\u6570\u503c\u88ab\u4f20\u9012\u7ed9\u4e86\u6574\u4e2a\u5207\u7247\uff0c\u533a\u522b\u4e8ePython\u7684\u5185\u5efa\u5217\u8868\uff0c\u6570\u7ec4\u7684\u5207\u7247\u662f\u539f\u6570\u7ec4\u7684\u89c6\u56fe</p> <p>\u5982\u679c\u60f3\u8981\u62f7\u8d1d\uff1a</p> In\u00a0[613]: Copied! <pre>#\u4f7f\u7528copy\u65b9\u6cd5\u521b\u5efa\u5207\u7247\u7684\u526f\u672c\narr_slice = arr[5:8].copy()\narr_slice[1] = 12345\nprint(arr) #\u539f\u6570\u7ec4\u6ca1\u6709\u88ab\u4fee\u6539\n</pre> #\u4f7f\u7528copy\u65b9\u6cd5\u521b\u5efa\u5207\u7247\u7684\u526f\u672c arr_slice = arr[5:8].copy() arr_slice[1] = 12345 print(arr) #\u539f\u6570\u7ec4\u6ca1\u6709\u88ab\u4fee\u6539 <pre>[ 0  1  2  3  4 64 64 64  8  9]\n</pre> In\u00a0[614]: Copied! <pre>names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])\ndata = np.random.randn(7, 4) #\u751f\u6210\u4e00\u4e2a7\u884c4\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4\nprint(names)\nprint(data)\nprint(names == 'Bob') #\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u7b49\u4e8e'Bob'\nprint(data[names == 'Bob']) #\u4f7f\u7528\u5e03\u5c14\u503c\u6570\u7ec4\u8fdb\u884c\u7d22\u5f15\uff0c\u8fd4\u56de\u5bf9\u5e94\u884c\nprint(data[names == 'Bob', 2:]) #\u8fd4\u56de\u5bf9\u5e94\u884c\u7684\u7b2c3\u5217\u53ca\u4e4b\u540e\u7684\u5217\nprint(data[names == 'Bob', 3]) #\u8fd4\u56de\u5bf9\u5e94\u884c\u7684\u7b2c4\u5217\nprint(data[names != 'Bob']) #\u8fd4\u56de\u4e0d\u7b49\u4e8e'Bob'\u7684\u884c\ncond = names == 'Bob' #\u5c06\u5e03\u5c14\u503c\u6570\u7ec4\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\nprint(data[~cond]) #\u4f7f\u7528~\u64cd\u4f5c\u7b26\u53d6\u53cd\uff0c\u8fd4\u56de\u4e0d\u7b49\u4e8e'Bob'\u7684\u884c\nmask = (names == 'Bob') | (names == 'Will') #\u4f7f\u7528|\u64cd\u4f5c\u7b26\u8fdb\u884c\u6216\u8fd0\u7b97\nprint(mask)\nprint(data[mask]) #\u8fd4\u56de\u7b49\u4e8e'Bob'\u6216'Will'\u7684\u884c\nprint(data[data &lt; 0]) #\u8fd4\u56de\u6240\u6709\u5c0f\u4e8e0\u7684\u5143\u7d20\n</pre> names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe']) data = np.random.randn(7, 4) #\u751f\u6210\u4e00\u4e2a7\u884c4\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4 print(names) print(data) print(names == 'Bob') #\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u7b49\u4e8e'Bob' print(data[names == 'Bob']) #\u4f7f\u7528\u5e03\u5c14\u503c\u6570\u7ec4\u8fdb\u884c\u7d22\u5f15\uff0c\u8fd4\u56de\u5bf9\u5e94\u884c print(data[names == 'Bob', 2:]) #\u8fd4\u56de\u5bf9\u5e94\u884c\u7684\u7b2c3\u5217\u53ca\u4e4b\u540e\u7684\u5217 print(data[names == 'Bob', 3]) #\u8fd4\u56de\u5bf9\u5e94\u884c\u7684\u7b2c4\u5217 print(data[names != 'Bob']) #\u8fd4\u56de\u4e0d\u7b49\u4e8e'Bob'\u7684\u884c cond = names == 'Bob' #\u5c06\u5e03\u5c14\u503c\u6570\u7ec4\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf print(data[~cond]) #\u4f7f\u7528~\u64cd\u4f5c\u7b26\u53d6\u53cd\uff0c\u8fd4\u56de\u4e0d\u7b49\u4e8e'Bob'\u7684\u884c mask = (names == 'Bob') | (names == 'Will') #\u4f7f\u7528|\u64cd\u4f5c\u7b26\u8fdb\u884c\u6216\u8fd0\u7b97 print(mask) print(data[mask]) #\u8fd4\u56de\u7b49\u4e8e'Bob'\u6216'Will'\u7684\u884c print(data[data &lt; 0]) #\u8fd4\u56de\u6240\u6709\u5c0f\u4e8e0\u7684\u5143\u7d20 <pre>['Bob' 'Joe' 'Will' 'Bob' 'Will' 'Joe' 'Joe']\n[[ 1.98035889 -0.14063372 -0.5404145  -0.13409905]\n [ 1.11540914 -0.30698031 -0.77362348 -0.01646606]\n [ 0.53920263 -1.23783719  0.5808682  -0.39477602]\n [-0.78932005  1.82488473  0.39211308 -1.83054916]\n [-0.43050898  1.114546    1.07013958 -1.15989066]\n [-0.21114431 -1.83782182  0.36218474 -0.51076513]\n [-1.37259636 -0.86586082  0.14125782  0.84858485]]\n[ True False False  True False False False]\n[[ 1.98035889 -0.14063372 -0.5404145  -0.13409905]\n [-0.78932005  1.82488473  0.39211308 -1.83054916]]\n[[-0.5404145  -0.13409905]\n [ 0.39211308 -1.83054916]]\n[-0.13409905 -1.83054916]\n[[ 1.11540914 -0.30698031 -0.77362348 -0.01646606]\n [ 0.53920263 -1.23783719  0.5808682  -0.39477602]\n [-0.43050898  1.114546    1.07013958 -1.15989066]\n [-0.21114431 -1.83782182  0.36218474 -0.51076513]\n [-1.37259636 -0.86586082  0.14125782  0.84858485]]\n[[ 1.11540914 -0.30698031 -0.77362348 -0.01646606]\n [ 0.53920263 -1.23783719  0.5808682  -0.39477602]\n [-0.43050898  1.114546    1.07013958 -1.15989066]\n [-0.21114431 -1.83782182  0.36218474 -0.51076513]\n [-1.37259636 -0.86586082  0.14125782  0.84858485]]\n[ True False  True  True  True False False]\n[[ 1.98035889 -0.14063372 -0.5404145  -0.13409905]\n [ 0.53920263 -1.23783719  0.5808682  -0.39477602]\n [-0.78932005  1.82488473  0.39211308 -1.83054916]\n [-0.43050898  1.114546    1.07013958 -1.15989066]]\n[-0.14063372 -0.5404145  -0.13409905 -0.30698031 -0.77362348 -0.01646606\n -1.23783719 -0.39477602 -0.78932005 -1.83054916 -0.43050898 -1.15989066\n -0.21114431 -1.83782182 -0.51076513 -1.37259636 -0.86586082]\n</pre> In\u00a0[615]: Copied! <pre>arr = np.empty((8, 4)) #\u751f\u6210\u4e00\u4e2a8\u884c4\u5217\u7684\u7a7a\u6570\u7ec4\nfor i in range(8):\n\tarr[i] = i #\u5c06\u6bcf\u884c\u8d4b\u503c\u4e3a\u884c\u53f7\nprint(arr)\narr2 = arr[[4, 3, 0, 6]] #\u4f7f\u7528\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u7d22\u5f15\uff0c\u8fd4\u56de\u6307\u5b9a\u884c\nprint(arr2)\narr3 = arr[[-3, -5, -7]] #\u4f7f\u7528\u8d1f\u6570\u7d22\u5f15\uff0c\u8fd4\u56de\u5012\u6570\u7b2c3\u3001\u7b2c5\u3001\u7b2c7\u884c\nprint(arr3)\narr4 = np.arange(32).reshape((8, 4)) #\u751f\u6210\u4e00\u4e2a8\u884c4\u5217\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a0\u523031\nprint(arr4)\nprint(arr4[[1, 5, 7, 2], [0, 3, 1, 2]]) #\u8fd4\u56de(1,0)\u3001(5,3)\u3001(7,1)\u3001(2,2)\u4f4d\u7f6e\u7684\u5143\u7d20\nprint(arr4[[1, 5, 7, 2]][:, [0, 3, 1, 2]]) #\u5148\u9009\u53d6\u884c\uff0c\u518d\u9009\u53d6\u5217\n</pre> arr = np.empty((8, 4)) #\u751f\u6210\u4e00\u4e2a8\u884c4\u5217\u7684\u7a7a\u6570\u7ec4 for i in range(8): \tarr[i] = i #\u5c06\u6bcf\u884c\u8d4b\u503c\u4e3a\u884c\u53f7 print(arr) arr2 = arr[[4, 3, 0, 6]] #\u4f7f\u7528\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u7d22\u5f15\uff0c\u8fd4\u56de\u6307\u5b9a\u884c print(arr2) arr3 = arr[[-3, -5, -7]] #\u4f7f\u7528\u8d1f\u6570\u7d22\u5f15\uff0c\u8fd4\u56de\u5012\u6570\u7b2c3\u3001\u7b2c5\u3001\u7b2c7\u884c print(arr3) arr4 = np.arange(32).reshape((8, 4)) #\u751f\u6210\u4e00\u4e2a8\u884c4\u5217\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a0\u523031 print(arr4) print(arr4[[1, 5, 7, 2], [0, 3, 1, 2]]) #\u8fd4\u56de(1,0)\u3001(5,3)\u3001(7,1)\u3001(2,2)\u4f4d\u7f6e\u7684\u5143\u7d20 print(arr4[[1, 5, 7, 2]][:, [0, 3, 1, 2]]) #\u5148\u9009\u53d6\u884c\uff0c\u518d\u9009\u53d6\u5217 <pre>[[0. 0. 0. 0.]\n [1. 1. 1. 1.]\n [2. 2. 2. 2.]\n [3. 3. 3. 3.]\n [4. 4. 4. 4.]\n [5. 5. 5. 5.]\n [6. 6. 6. 6.]\n [7. 7. 7. 7.]]\n[[4. 4. 4. 4.]\n [3. 3. 3. 3.]\n [0. 0. 0. 0.]\n [6. 6. 6. 6.]]\n[[5. 5. 5. 5.]\n [3. 3. 3. 3.]\n [1. 1. 1. 1.]]\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]\n [12 13 14 15]\n [16 17 18 19]\n [20 21 22 23]\n [24 25 26 27]\n [28 29 30 31]]\n[ 4 23 29 10]\n[[ 4  7  5  6]\n [20 23 21 22]\n [28 31 29 30]\n [ 8 11  9 10]]\n</pre> In\u00a0[616]: Copied! <pre>arr = np.arange(15).reshape((3, 5)) #\u751f\u6210\u4e00\u4e2a3\u884c5\u5217\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a0\u523014\nprint(arr)\nprint(arr.T) #\u8f6c\u7f6e\u6570\u7ec4\narr2 = np.random.randn(6, 3) #\u751f\u6210\u4e00\u4e2a6\u884c3\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4\nprint(arr2)\nprint(np.dot(arr2.T, arr2)) #\u8ba1\u7b97arr2\u7684\u8f6c\u7f6e\u4e0earr2\u7684\u77e9\u9635\u4e58\u79ef  dot\u51fd\u6570\u7528\u4e8e\u77e9\u9635\u4e58\u6cd5\n\narr = np.arange(16).reshape((2, 2, 4)) #\u751f\u6210\u4e00\u4e2a2\u5c422\u884c4\u5217\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a0\u523015\nprint(arr)\nprint(arr.transpose((1, 0, 2))) #\u6362\u8f74\u64cd\u4f5c\uff0c\u5c06\u7b2c0\u8f74\u548c\u7b2c1\u8f74\u4ea4\u6362\nprint(arr.swapaxes(1, 2)) #\u6362\u8f74\u64cd\u4f5c\uff0c\u5c06\u7b2c1\u8f74\u548c\u7b2c2\u8f74\u4ea4\u6362(\u8fd4\u56de\u7684\u662f\u6570\u636e\u7684\u89c6\u56fe\uff0c\u6ca1\u6709\u5bf9\u6570\u636e\u8fdb\u884c\u590d\u5236)\n</pre> arr = np.arange(15).reshape((3, 5)) #\u751f\u6210\u4e00\u4e2a3\u884c5\u5217\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a0\u523014 print(arr) print(arr.T) #\u8f6c\u7f6e\u6570\u7ec4 arr2 = np.random.randn(6, 3) #\u751f\u6210\u4e00\u4e2a6\u884c3\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4 print(arr2) print(np.dot(arr2.T, arr2)) #\u8ba1\u7b97arr2\u7684\u8f6c\u7f6e\u4e0earr2\u7684\u77e9\u9635\u4e58\u79ef  dot\u51fd\u6570\u7528\u4e8e\u77e9\u9635\u4e58\u6cd5  arr = np.arange(16).reshape((2, 2, 4)) #\u751f\u6210\u4e00\u4e2a2\u5c422\u884c4\u5217\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a0\u523015 print(arr) print(arr.transpose((1, 0, 2))) #\u6362\u8f74\u64cd\u4f5c\uff0c\u5c06\u7b2c0\u8f74\u548c\u7b2c1\u8f74\u4ea4\u6362 print(arr.swapaxes(1, 2)) #\u6362\u8f74\u64cd\u4f5c\uff0c\u5c06\u7b2c1\u8f74\u548c\u7b2c2\u8f74\u4ea4\u6362(\u8fd4\u56de\u7684\u662f\u6570\u636e\u7684\u89c6\u56fe\uff0c\u6ca1\u6709\u5bf9\u6570\u636e\u8fdb\u884c\u590d\u5236) <pre>[[ 0  1  2  3  4]\n [ 5  6  7  8  9]\n [10 11 12 13 14]]\n[[ 0  5 10]\n [ 1  6 11]\n [ 2  7 12]\n [ 3  8 13]\n [ 4  9 14]]\n[[ 0.85564288 -0.04252568 -0.20778933]\n [ 0.54632906  1.16012903 -1.4003428 ]\n [-0.53398872  0.54562641 -1.31735199]\n [ 0.26953311 -0.57490285  0.50903106]\n [ 0.48322556 -0.70564274  0.98810074]\n [-0.13515452  0.7247361  -0.27933006]]\n[[ 1.64016592 -0.28782427  0.41303866]\n [-0.28782427  2.99910336 -3.52685409]\n [ 0.41303866 -3.52685409  5.0530336 ]]\n[[[ 0  1  2  3]\n  [ 4  5  6  7]]\n\n [[ 8  9 10 11]\n  [12 13 14 15]]]\n[[[ 0  1  2  3]\n  [ 8  9 10 11]]\n\n [[ 4  5  6  7]\n  [12 13 14 15]]]\n[[[ 0  4]\n  [ 1  5]\n  [ 2  6]\n  [ 3  7]]\n\n [[ 8 12]\n  [ 9 13]\n  [10 14]\n  [11 15]]]\n</pre> In\u00a0[617]: Copied! <pre>arr = np.arange(10)\nprint(np.sqrt(arr)) #\u8ba1\u7b97\u5e73\u65b9\u6839\nprint(np.exp(arr)) #\u8ba1\u7b97e\u7684\u6307\u6570\u6b21\u5e42\n\nx = np.random.randn(8)\ny = np.random.randn(8)\nprint(x)\nprint(y)\nprint(np.maximum(x, y)) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u8f83\u5927\u503c\u7ec4\u6210\u7684\u65b0\u6570\u7ec4\n\narr = np.random.randn(7) * 5\nprint(arr)\nremainder, whole_part = np.modf(arr) #\u5c06\u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\u5206\u5f00\nprint(remainder) #\u5c0f\u6570\u90e8\u5206\nprint(whole_part) #\u6574\u6570\u90e8\u5206\nprint(arr) #\u539f\u6570\u7ec4\u6ca1\u6709\u88ab\u4fee\u6539\n</pre> arr = np.arange(10) print(np.sqrt(arr)) #\u8ba1\u7b97\u5e73\u65b9\u6839 print(np.exp(arr)) #\u8ba1\u7b97e\u7684\u6307\u6570\u6b21\u5e42  x = np.random.randn(8) y = np.random.randn(8) print(x) print(y) print(np.maximum(x, y)) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u8f83\u5927\u503c\u7ec4\u6210\u7684\u65b0\u6570\u7ec4  arr = np.random.randn(7) * 5 print(arr) remainder, whole_part = np.modf(arr) #\u5c06\u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\u5206\u5f00 print(remainder) #\u5c0f\u6570\u90e8\u5206 print(whole_part) #\u6574\u6570\u90e8\u5206 print(arr) #\u539f\u6570\u7ec4\u6ca1\u6709\u88ab\u4fee\u6539 <pre>[0.         1.         1.41421356 1.73205081 2.         2.23606798\n 2.44948974 2.64575131 2.82842712 3.        ]\n[1.00000000e+00 2.71828183e+00 7.38905610e+00 2.00855369e+01\n 5.45981500e+01 1.48413159e+02 4.03428793e+02 1.09663316e+03\n 2.98095799e+03 8.10308393e+03]\n[-0.23709495 -0.38832568  0.07463109 -1.55137234  0.15763095 -0.41989319\n  0.85626961 -0.91794876]\n[ 0.7114246  -1.13200916 -0.22686387 -0.64071955  0.25046985  0.81132538\n  0.60929907  1.14051438]\n[ 0.7114246  -0.38832568  0.07463109 -0.64071955  0.25046985  0.81132538\n  0.85626961  1.14051438]\n[-6.68713146  3.99247098  5.60016076  7.01587543  7.07052105  7.1678285\n  1.59165592]\n[-0.68713146  0.99247098  0.60016076  0.01587543  0.07052105  0.1678285\n  0.59165592]\n[-6.  3.  5.  7.  7.  7.  1.]\n[-6.68713146  3.99247098  5.60016076  7.01587543  7.07052105  7.1678285\n  1.59165592]\n</pre> <p>\u4e00\u4e9b\u53ef\u7528\u7684\u901a\u7528\u51fd\u6570\uff1a</p> In\u00a0[618]: Copied! <pre>np.abs(arr) #\u8ba1\u7b97\u7edd\u5bf9\u503c\nnp.fabs(arr) #\u8ba1\u7b97\u7edd\u5bf9\u503c\nnp.sqrt(arr) #\u8ba1\u7b97\u5e73\u65b9\u6839\nnp.square(arr) #\u8ba1\u7b97\u5e73\u65b9\nnp.exp(arr) #\u8ba1\u7b97e\u7684\u6307\u6570\u6b21\u5e42\nnp.log(arr) #\u8ba1\u7b97\u81ea\u7136\u5bf9\u6570\nnp.log10(arr) #\u8ba1\u7b97\u4ee510\u4e3a\u5e95\u7684\u5bf9\u6570\nnp.log2(arr) #\u8ba1\u7b97\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570\nnp.log1p(arr) #\u8ba1\u7b97log(1 + x)\nnp.sign(arr) #\u8ba1\u7b97\u7b26\u53f7\u51fd\u6570\uff0c\u8fd4\u56de-1, 0, 1\nnp.ceil(arr) #\u5411\u4e0a\u53d6\u6574\nnp.floor(arr) #\u5411\u4e0b\u53d6\u6574\nnp.rint(arr) #\u56db\u820d\u4e94\u5165\u53d6\u6574\nnp.modf(arr) #\u5c06\u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\u5206\u5f00\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\nnp.isnan(arr) #\u5224\u65ad\u662f\u5426\u4e3aNaN\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.isfinite(arr) #\u5224\u65ad\u662f\u5426\u4e3a\u6709\u9650\u6570\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.isinf(arr) #\u5224\u65ad\u662f\u5426\u4e3a\u65e0\u7a77\u5927\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.cos(arr) #\u8ba1\u7b97\u4f59\u5f26\nnp.nan_to_num(arr) #\u5c06NaN\u66ff\u6362\u4e3a0\uff0c\u65e0\u7a77\u5927\u66ff\u6362\u4e3a\u6700\u5927\u6709\u9650\u6570\uff0c\u65e0\u7a77\u5c0f\u66ff\u6362\u4e3a\u6700\u5c0f\u6709\u9650\u6570\nnp.logical_not(arr) #\u9010\u5143\u7d20\u53d6\u53cd\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\n</pre> np.abs(arr) #\u8ba1\u7b97\u7edd\u5bf9\u503c np.fabs(arr) #\u8ba1\u7b97\u7edd\u5bf9\u503c np.sqrt(arr) #\u8ba1\u7b97\u5e73\u65b9\u6839 np.square(arr) #\u8ba1\u7b97\u5e73\u65b9 np.exp(arr) #\u8ba1\u7b97e\u7684\u6307\u6570\u6b21\u5e42 np.log(arr) #\u8ba1\u7b97\u81ea\u7136\u5bf9\u6570 np.log10(arr) #\u8ba1\u7b97\u4ee510\u4e3a\u5e95\u7684\u5bf9\u6570 np.log2(arr) #\u8ba1\u7b97\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570 np.log1p(arr) #\u8ba1\u7b97log(1 + x) np.sign(arr) #\u8ba1\u7b97\u7b26\u53f7\u51fd\u6570\uff0c\u8fd4\u56de-1, 0, 1 np.ceil(arr) #\u5411\u4e0a\u53d6\u6574 np.floor(arr) #\u5411\u4e0b\u53d6\u6574 np.rint(arr) #\u56db\u820d\u4e94\u5165\u53d6\u6574 np.modf(arr) #\u5c06\u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\u5206\u5f00\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4 np.isnan(arr) #\u5224\u65ad\u662f\u5426\u4e3aNaN\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.isfinite(arr) #\u5224\u65ad\u662f\u5426\u4e3a\u6709\u9650\u6570\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.isinf(arr) #\u5224\u65ad\u662f\u5426\u4e3a\u65e0\u7a77\u5927\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.cos(arr) #\u8ba1\u7b97\u4f59\u5f26 np.nan_to_num(arr) #\u5c06NaN\u66ff\u6362\u4e3a0\uff0c\u65e0\u7a77\u5927\u66ff\u6362\u4e3a\u6700\u5927\u6709\u9650\u6570\uff0c\u65e0\u7a77\u5c0f\u66ff\u6362\u4e3a\u6700\u5c0f\u6709\u9650\u6570 np.logical_not(arr) #\u9010\u5143\u7d20\u53d6\u53cd\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 <pre>/tmp/ipykernel_1781/208123816.py:3: RuntimeWarning: invalid value encountered in sqrt\n  np.sqrt(arr) #\u8ba1\u7b97\u5e73\u65b9\u6839\n/tmp/ipykernel_1781/208123816.py:6: RuntimeWarning: invalid value encountered in log\n  np.log(arr) #\u8ba1\u7b97\u81ea\u7136\u5bf9\u6570\n/tmp/ipykernel_1781/208123816.py:7: RuntimeWarning: invalid value encountered in log10\n  np.log10(arr) #\u8ba1\u7b97\u4ee510\u4e3a\u5e95\u7684\u5bf9\u6570\n/tmp/ipykernel_1781/208123816.py:8: RuntimeWarning: invalid value encountered in log2\n  np.log2(arr) #\u8ba1\u7b97\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570\n/tmp/ipykernel_1781/208123816.py:9: RuntimeWarning: invalid value encountered in log1p\n  np.log1p(arr) #\u8ba1\u7b97log(1 + x)\n</pre> Out[618]: <pre>array([False, False, False, False, False, False, False])</pre> <p>\u4e8c\u5143\u901a\u7528\u51fd\u6570\uff1b</p> In\u00a0[619]: Copied! <pre>x = np.array([1, 5, 9, 3.5, 6])\ny = np.array([2, 6, 1, 4.5, 3])\nnp.add(x, y) #\u9010\u5143\u7d20\u76f8\u52a0\nnp.subtract(x, y) #\u9010\u5143\u7d20\u76f8\u51cf\nnp.multiply(x, y) #\u9010\u5143\u7d20\u76f8\u4e58\nnp.divide(x, y) #\u9010\u5143\u7d20\u76f8\u9664\nnp.floor_divide(x, y) #\u9010\u5143\u7d20\u5411\u4e0b\u53d6\u6574\u9664\nnp.power(x, y) #\u9010\u5143\u7d20\u5e42\u8fd0\u7b97\nnp.mod(x, y) #\u9010\u5143\u7d20\u53d6\u6a21\nnp.fmod(x, y) #\u9010\u5143\u7d20\u53d6\u6a21\nnp.copysign(x, y) #\u5c06y\u7684\u7b26\u53f7\u8d4b\u7ed9x\uff0c\u8fd4\u56de\u65b0\u7684\u6570\u7ec4\nnp.greater(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.greater_equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.less(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.less_equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.not_equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.logical_and(x, y) #\u9010\u5143\u7d20\u903b\u8f91\u4e0e\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.logical_or(x, y) #\u9010\u5143\u7d20\u903b\u8f91\u6216\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\nnp.logical_xor(x, y) #\u9010\u5143\u7d20\u903b\u8f91\u5f02\u6216\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\n</pre> x = np.array([1, 5, 9, 3.5, 6]) y = np.array([2, 6, 1, 4.5, 3]) np.add(x, y) #\u9010\u5143\u7d20\u76f8\u52a0 np.subtract(x, y) #\u9010\u5143\u7d20\u76f8\u51cf np.multiply(x, y) #\u9010\u5143\u7d20\u76f8\u4e58 np.divide(x, y) #\u9010\u5143\u7d20\u76f8\u9664 np.floor_divide(x, y) #\u9010\u5143\u7d20\u5411\u4e0b\u53d6\u6574\u9664 np.power(x, y) #\u9010\u5143\u7d20\u5e42\u8fd0\u7b97 np.mod(x, y) #\u9010\u5143\u7d20\u53d6\u6a21 np.fmod(x, y) #\u9010\u5143\u7d20\u53d6\u6a21 np.copysign(x, y) #\u5c06y\u7684\u7b26\u53f7\u8d4b\u7ed9x\uff0c\u8fd4\u56de\u65b0\u7684\u6570\u7ec4 np.greater(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.greater_equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.less(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.less_equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.not_equal(x, y) #\u9010\u5143\u7d20\u6bd4\u8f83\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.logical_and(x, y) #\u9010\u5143\u7d20\u903b\u8f91\u4e0e\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.logical_or(x, y) #\u9010\u5143\u7d20\u903b\u8f91\u6216\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 np.logical_xor(x, y) #\u9010\u5143\u7d20\u903b\u8f91\u5f02\u6216\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 Out[619]: <pre>array([False, False, False, False, False])</pre> In\u00a0[620]: Copied! <pre>points = np.arange(-5, 5, 0.01) #\u751f\u6210\u4e00\u4e2a\u5305\u542b-5\u52305\uff0c\u6b65\u957f\u4e3a0.01\u7684\u6570\u7ec4\n\nxs, ys = np.meshgrid(points, points) #\u751f\u6210\u7f51\u683c\u70b9\u5750\u6807\u77e9\u9635\nprint(xs)\nprint(ys)\n\nz = np.sqrt(xs ** 2 + ys ** 2) #\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\nprint(z)\n\nimport matplotlib.pyplot as plt\n\nplt.imshow(z, cmap=plt.cm.gray); plt.colorbar() #\u663e\u793a\u56fe\u50cf\nplt.title(\"Image plot of $\\sqrt{x^2 + y^2}$ for a grid of values\") #\u6dfb\u52a0\u6807\u9898\nplt.show()\n</pre> points = np.arange(-5, 5, 0.01) #\u751f\u6210\u4e00\u4e2a\u5305\u542b-5\u52305\uff0c\u6b65\u957f\u4e3a0.01\u7684\u6570\u7ec4  xs, ys = np.meshgrid(points, points) #\u751f\u6210\u7f51\u683c\u70b9\u5750\u6807\u77e9\u9635 print(xs) print(ys)  z = np.sqrt(xs ** 2 + ys ** 2) #\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb print(z)  import matplotlib.pyplot as plt  plt.imshow(z, cmap=plt.cm.gray); plt.colorbar() #\u663e\u793a\u56fe\u50cf plt.title(\"Image plot of $\\sqrt{x^2 + y^2}$ for a grid of values\") #\u6dfb\u52a0\u6807\u9898 plt.show() <pre>[[-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n ...\n [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]]\n[[-5.   -5.   -5.   ... -5.   -5.   -5.  ]\n [-4.99 -4.99 -4.99 ... -4.99 -4.99 -4.99]\n [-4.98 -4.98 -4.98 ... -4.98 -4.98 -4.98]\n ...\n [ 4.97  4.97  4.97 ...  4.97  4.97  4.97]\n [ 4.98  4.98  4.98 ...  4.98  4.98  4.98]\n [ 4.99  4.99  4.99 ...  4.99  4.99  4.99]]\n[[7.07106781 7.06400028 7.05693985 ... 7.04988652 7.05693985 7.06400028]\n [7.06400028 7.05692568 7.04985815 ... 7.04279774 7.04985815 7.05692568]\n [7.05693985 7.04985815 7.04278354 ... 7.03571603 7.04278354 7.04985815]\n ...\n [7.04988652 7.04279774 7.03571603 ... 7.0286414  7.03571603 7.04279774]\n [7.05693985 7.04985815 7.04278354 ... 7.03571603 7.04278354 7.04985815]\n [7.06400028 7.05692568 7.04985815 ... 7.04279774 7.04985815 7.05692568]]\n</pre> In\u00a0[621]: Copied! <pre>xarr = np.array([1.1, 1.2, 1.3, 1.4, 1.5])\nyarr = np.array([2.1, 2.2, 2.3, 2.4, 2.5])\ncond = np.array([True, False, True, True, False])\nresult = np.where(cond, xarr, yarr) #\u6839\u636e\u6761\u4ef6\u9009\u62e9xarr\u6216yarr\u7684\u5143\u7d20\nprint(result)\n\narr = np.random.randn(4, 4) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4\nprint(arr)\nprint(arr &gt; 0) #\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u5927\u4e8e0\nprint(np.where(arr &gt; 0, 2, -2)) #\u6839\u636e\u6761\u4ef6\u9009\u62e92\u6216-2\nprint(np.where(arr &gt; 0, 2, arr)) #\u6839\u636e\u6761\u4ef6\u9009\u62e92\u6216\u539f\u6570\u7ec4\u7684\u5143\u7d20\n</pre> xarr = np.array([1.1, 1.2, 1.3, 1.4, 1.5]) yarr = np.array([2.1, 2.2, 2.3, 2.4, 2.5]) cond = np.array([True, False, True, True, False]) result = np.where(cond, xarr, yarr) #\u6839\u636e\u6761\u4ef6\u9009\u62e9xarr\u6216yarr\u7684\u5143\u7d20 print(result)  arr = np.random.randn(4, 4) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4 print(arr) print(arr &gt; 0) #\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u5927\u4e8e0 print(np.where(arr &gt; 0, 2, -2)) #\u6839\u636e\u6761\u4ef6\u9009\u62e92\u6216-2 print(np.where(arr &gt; 0, 2, arr)) #\u6839\u636e\u6761\u4ef6\u9009\u62e92\u6216\u539f\u6570\u7ec4\u7684\u5143\u7d20 <pre>[1.1 2.2 1.3 1.4 2.5]\n[[-1.05810338  0.40840437  0.65085905 -1.52221584]\n [-1.41211195 -1.43216308  0.31890844 -0.48538408]\n [-1.08059948 -2.01702599 -0.95373316  0.84718508]\n [ 1.19930587 -0.38397758 -1.126295   -0.93178648]]\n[[False  True  True False]\n [False False  True False]\n [False False False  True]\n [ True False False False]]\n[[-2  2  2 -2]\n [-2 -2  2 -2]\n [-2 -2 -2  2]\n [ 2 -2 -2 -2]]\n[[-1.05810338  2.          2.         -1.52221584]\n [-1.41211195 -1.43216308  2.         -0.48538408]\n [-1.08059948 -2.01702599 -0.95373316  2.        ]\n [ 2.         -0.38397758 -1.126295   -0.93178648]]\n</pre> In\u00a0[622]: Copied! <pre>arr = np.random.randn(5, 4) #\u751f\u6210\u4e00\u4e2a5\u884c4\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4\nprint(arr)\nprint(arr.mean()) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u5e73\u5747\u503c\nprint(np.mean(arr)) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u5e73\u5747\u503c\nprint(arr.sum()) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u548c\nprint(np.sum(arr)) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u548c\nprint(arr.mean(axis=0)) #\u8ba1\u7b97\u6bcf\u5217\u7684\u5e73\u5747\u503c\nprint(arr.sum(axis=1)) #\u8ba1\u7b97\u6bcf\u884c\u7684\u548c\n\narr = np.array([0, 1, 2, 3, 4, 5, 6, 7])\nprint(arr.cumsum()) #\u8ba1\u7b97\u7d2f\u79ef\u548c\uff0c\u4e0d\u4f1a\u805a\u5408\uff0c\u4f1a\u4ea7\u751f\u4e2d\u95f4\u7ed3\u679c\nprint(arr.cumprod()) #\u8ba1\u7b97\u7d2f\u79ef\u79ef\narr = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8]])\nprint(arr)\nprint(arr.cumsum(axis=0)) #\u8ba1\u7b97\u6bcf\u5217\u7684\u7d2f\u79ef\u548c\nprint(arr.cumprod(axis=1)) #\u8ba1\u7b97\u6bcf\u884c\u7684\u7d2f\u79ef\u79ef\n</pre> arr = np.random.randn(5, 4) #\u751f\u6210\u4e00\u4e2a5\u884c4\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4 print(arr) print(arr.mean()) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u5e73\u5747\u503c print(np.mean(arr)) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u5e73\u5747\u503c print(arr.sum()) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u548c print(np.sum(arr)) #\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u548c print(arr.mean(axis=0)) #\u8ba1\u7b97\u6bcf\u5217\u7684\u5e73\u5747\u503c print(arr.sum(axis=1)) #\u8ba1\u7b97\u6bcf\u884c\u7684\u548c  arr = np.array([0, 1, 2, 3, 4, 5, 6, 7]) print(arr.cumsum()) #\u8ba1\u7b97\u7d2f\u79ef\u548c\uff0c\u4e0d\u4f1a\u805a\u5408\uff0c\u4f1a\u4ea7\u751f\u4e2d\u95f4\u7ed3\u679c print(arr.cumprod()) #\u8ba1\u7b97\u7d2f\u79ef\u79ef arr = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8]]) print(arr) print(arr.cumsum(axis=0)) #\u8ba1\u7b97\u6bcf\u5217\u7684\u7d2f\u79ef\u548c print(arr.cumprod(axis=1)) #\u8ba1\u7b97\u6bcf\u884c\u7684\u7d2f\u79ef\u79ef <pre>[[-4.56196045e-01 -1.03258401e+00 -1.02859810e+00  9.39423207e-01]\n [-1.58930551e-01 -1.52660799e+00 -3.79433794e-01 -1.44788821e-02]\n [ 6.05484532e-02 -6.64180771e-01  8.22934619e-01 -5.82553474e-01]\n [ 1.77842639e+00  6.92280340e-01  1.36219508e+00 -7.95597059e-04]\n [ 5.82077114e-01 -8.25182157e-01 -9.18408324e-01 -1.04176122e+00]]\n-0.11959128568847315\n-0.11959128568847315\n-2.391825713769463\n-2.391825713769463\n[ 0.36118507 -0.67125492 -0.0282621  -0.14003319]\n[-1.57795495 -2.07945122 -0.36325117  3.83210621 -2.20327458]\n[ 0  1  3  6 10 15 21 28]\n[0 0 0 0 0 0 0 0]\n[[0 1 2]\n [3 4 5]\n [6 7 8]]\n[[ 0  1  2]\n [ 3  5  7]\n [ 9 12 15]]\n[[  0   0   0]\n [  3  12  60]\n [  6  42 336]]\n</pre> In\u00a0[623]: Copied! <pre>arr = np.random.randn(100) #\u751f\u6210\u4e00\u4e2a\u5305\u542b100\u4e2a\u968f\u673a\u6570\u7684\u6570\u7ec4\nprint((arr &gt; 0).sum()) #\u8ba1\u7b97\u5927\u4e8e0\u7684\u5143\u7d20\u4e2a\u6570\nprint((arr &lt; 0).sum()) #\u8ba1\u7b97\u5c0f\u4e8e0\u7684\u5143\u7d20\u4e2a\u6570\n\nbools = np.array([False, False, True, False])\nprint(bools.any()) #\u5224\u65ad\u662f\u5426\u6709\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u4e3aTrue\nprint(bools.all()) #\u5224\u65ad\u662f\u5426\u6240\u6709\u5143\u7d20\u90fd\u4e3aTrue\n</pre> arr = np.random.randn(100) #\u751f\u6210\u4e00\u4e2a\u5305\u542b100\u4e2a\u968f\u673a\u6570\u7684\u6570\u7ec4 print((arr &gt; 0).sum()) #\u8ba1\u7b97\u5927\u4e8e0\u7684\u5143\u7d20\u4e2a\u6570 print((arr &lt; 0).sum()) #\u8ba1\u7b97\u5c0f\u4e8e0\u7684\u5143\u7d20\u4e2a\u6570  bools = np.array([False, False, True, False]) print(bools.any()) #\u5224\u65ad\u662f\u5426\u6709\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u4e3aTrue print(bools.all()) #\u5224\u65ad\u662f\u5426\u6240\u6709\u5143\u7d20\u90fd\u4e3aTrue <pre>51\n49\nTrue\nFalse\n</pre> In\u00a0[624]: Copied! <pre>arr = np.random.randn(6)\nprint(arr)\narr.sort() #\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\nprint(arr)\n\narr = np.random.randn(5, 3) #\u751f\u6210\u4e00\u4e2a5\u884c3\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4\nprint(arr)\narr.sort(1) #\u5bf9\u6bcf\u884c\u8fdb\u884c\u6392\u5e8f\nprint(arr)\narr.sort(0) #\u5bf9\u6bcf\u5217\u8fdb\u884c\u6392\u5e8f\nprint(arr)\n\nlarge_arr = np.random.randn(1000) #\u751f\u6210\u4e00\u4e2a\u5305\u542b1000\u4e2a\u968f\u673a\u6570\u7684\u6570\u7ec4\nlarge_arr.sort() #\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\nprint(large_arr[int(0.05 * len(large_arr))]) #\u83b7\u53d6\u7b2c5\u767e\u5206\u4f4d\u6570\u7684\u503c\n</pre> arr = np.random.randn(6) print(arr) arr.sort() #\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f print(arr)  arr = np.random.randn(5, 3) #\u751f\u6210\u4e00\u4e2a5\u884c3\u5217\u7684\u968f\u673a\u6570\u6570\u7ec4 print(arr) arr.sort(1) #\u5bf9\u6bcf\u884c\u8fdb\u884c\u6392\u5e8f print(arr) arr.sort(0) #\u5bf9\u6bcf\u5217\u8fdb\u884c\u6392\u5e8f print(arr)  large_arr = np.random.randn(1000) #\u751f\u6210\u4e00\u4e2a\u5305\u542b1000\u4e2a\u968f\u673a\u6570\u7684\u6570\u7ec4 large_arr.sort() #\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f print(large_arr[int(0.05 * len(large_arr))]) #\u83b7\u53d6\u7b2c5\u767e\u5206\u4f4d\u6570\u7684\u503c <pre>[-1.74389245 -1.81873424 -0.29307827  0.70749271 -1.04451242  0.84115949]\n[-1.81873424 -1.74389245 -1.04451242 -0.29307827  0.70749271  0.84115949]\n[[-0.13705867 -0.40960564 -0.75919113]\n [-0.67901445 -0.49249258 -0.3500471 ]\n [ 1.57511107  0.5882187  -1.1146488 ]\n [-0.26101429 -0.39168183 -0.89654198]\n [-0.10381368 -0.4742314  -0.82086332]]\n[[-0.75919113 -0.40960564 -0.13705867]\n [-0.67901445 -0.49249258 -0.3500471 ]\n [-1.1146488   0.5882187   1.57511107]\n [-0.89654198 -0.39168183 -0.26101429]\n [-0.82086332 -0.4742314  -0.10381368]]\n[[-1.1146488  -0.49249258 -0.3500471 ]\n [-0.89654198 -0.4742314  -0.26101429]\n [-0.82086332 -0.40960564 -0.13705867]\n [-0.75919113 -0.39168183 -0.10381368]\n [-0.67901445  0.5882187   1.57511107]]\n-1.7011391243169098\n</pre> In\u00a0[625]: Copied! <pre>names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])\nprint(np.unique(names)) #\u8fd4\u56de\u552f\u4e00\u503c\u7ec4\u6210\u7684\u65b0\u6570\u7ec4\nints = np.array([3, 3, 3, 2, 2, 1, 1, 4, 4])\nprint(np.unique(ints)) #\u8fd4\u56de\u552f\u4e00\u503c\u7ec4\u6210\u7684\u65b0\u6570\u7ec4\nprint(sorted(set(names))) #\u4f7f\u7528set\u51fd\u6570\u83b7\u53d6\u552f\u4e00\u503c\uff0c\u518d\u6392\u5e8f\n\nvalues = np.array([6, 0, 0, 3, 2, 5, 6])\nprint(np.in1d(values, [2, 3, 6])) #\u5224\u65advalues\u4e2d\u7684\u5143\u7d20\u662f\u5426\u5728[2,3,6]\u4e2d\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4\n</pre> names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe']) print(np.unique(names)) #\u8fd4\u56de\u552f\u4e00\u503c\u7ec4\u6210\u7684\u65b0\u6570\u7ec4 ints = np.array([3, 3, 3, 2, 2, 1, 1, 4, 4]) print(np.unique(ints)) #\u8fd4\u56de\u552f\u4e00\u503c\u7ec4\u6210\u7684\u65b0\u6570\u7ec4 print(sorted(set(names))) #\u4f7f\u7528set\u51fd\u6570\u83b7\u53d6\u552f\u4e00\u503c\uff0c\u518d\u6392\u5e8f  values = np.array([6, 0, 0, 3, 2, 5, 6]) print(np.in1d(values, [2, 3, 6])) #\u5224\u65advalues\u4e2d\u7684\u5143\u7d20\u662f\u5426\u5728[2,3,6]\u4e2d\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u6570\u7ec4 <pre>['Bob' 'Joe' 'Will']\n[1 2 3 4]\n['Bob', 'Joe', 'Will']\n[ True False False  True  True False  True]\n</pre> In\u00a0[626]: Copied! <pre>arr = np.arange(10)\nnp.save('some_array', arr) #\u5c06\u6570\u7ec4\u4fdd\u5b58\u5230\u6587\u4ef6some_array.npy\u4e2d\narr2 = np.load('some_array.npy') #\u4ece\u6587\u4ef6some_array.npy\u4e2d\u52a0\u8f7d\u6570\u7ec4\nprint(arr2)\n\narr = np.random.randn(6)\nprint(arr)\nnp.savez('array_archive.npz', a=arr, b=arr) #\u5c06\u591a\u4e2a\u6570\u7ec4\u4fdd\u5b58\u5230\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u4e2d\narch = np.load('array_archive.npz') #\u4ece\u538b\u7f29\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u7ec4\nprint(arch['a']) #\u8bbf\u95ee\u4fdd\u5b58\u7684\u6570\u7ec4\nprint(arch['b']) #\u8bbf\u95ee\u4fdd\u5b58\u7684\u6570\u7ec4\n</pre> arr = np.arange(10) np.save('some_array', arr) #\u5c06\u6570\u7ec4\u4fdd\u5b58\u5230\u6587\u4ef6some_array.npy\u4e2d arr2 = np.load('some_array.npy') #\u4ece\u6587\u4ef6some_array.npy\u4e2d\u52a0\u8f7d\u6570\u7ec4 print(arr2)  arr = np.random.randn(6) print(arr) np.savez('array_archive.npz', a=arr, b=arr) #\u5c06\u591a\u4e2a\u6570\u7ec4\u4fdd\u5b58\u5230\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u4e2d arch = np.load('array_archive.npz') #\u4ece\u538b\u7f29\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u7ec4 print(arch['a']) #\u8bbf\u95ee\u4fdd\u5b58\u7684\u6570\u7ec4 print(arch['b']) #\u8bbf\u95ee\u4fdd\u5b58\u7684\u6570\u7ec4 <pre>[0 1 2 3 4 5 6 7 8 9]\n[ 2.32802073  0.98967808 -1.31244413 -1.01637524  0.32825724  0.61922737]\n[ 2.32802073  0.98967808 -1.31244413 -1.01637524  0.32825724  0.61922737]\n[ 2.32802073  0.98967808 -1.31244413 -1.01637524  0.32825724  0.61922737]\n</pre> In\u00a0[627]: Copied! <pre>x = np.array([[1, 2, 3], [4, 5, 6]])\ny = np.array([[6, 23], [-1, 7], [8, 9]])\nprint(x)\nprint(y)\nprint(x.dot(y)) #\u77e9\u9635\u4e58\u6cd5\nprint(np.dot(x, y)) #\u77e9\u9635\u4e58\u6cd5\nprint(x @ y) #\u77e9\u9635\u4e58\u6cd5\n\nfrom numpy.linalg import inv, qr\n\nX = np.random.randn(5, 5)\nmat = X.T.dot(X) #\u8ba1\u7b97X\u7684\u8f6c\u7f6e\u4e0eX\u7684\u77e9\u9635\u4e58\u79ef\nprint(mat)\nprint(inv(mat)) #\u8ba1\u7b97\u77e9\u9635\u7684\u9006\nprint(mat.dot(inv(mat))) #\u9a8c\u8bc1\u77e9\u9635\u4e0e\u5176\u9006\u7684\u4e58\u79ef\u4e3a\u5355\u4f4d\u77e9\u9635\nq, r = qr(mat) #\u8fdb\u884cQR\u5206\u89e3\nprint(q)\nprint(r)\n</pre> x = np.array([[1, 2, 3], [4, 5, 6]]) y = np.array([[6, 23], [-1, 7], [8, 9]]) print(x) print(y) print(x.dot(y)) #\u77e9\u9635\u4e58\u6cd5 print(np.dot(x, y)) #\u77e9\u9635\u4e58\u6cd5 print(x @ y) #\u77e9\u9635\u4e58\u6cd5  from numpy.linalg import inv, qr  X = np.random.randn(5, 5) mat = X.T.dot(X) #\u8ba1\u7b97X\u7684\u8f6c\u7f6e\u4e0eX\u7684\u77e9\u9635\u4e58\u79ef print(mat) print(inv(mat)) #\u8ba1\u7b97\u77e9\u9635\u7684\u9006 print(mat.dot(inv(mat))) #\u9a8c\u8bc1\u77e9\u9635\u4e0e\u5176\u9006\u7684\u4e58\u79ef\u4e3a\u5355\u4f4d\u77e9\u9635 q, r = qr(mat) #\u8fdb\u884cQR\u5206\u89e3 print(q) print(r) <pre>[[1 2 3]\n [4 5 6]]\n[[ 6 23]\n [-1  7]\n [ 8  9]]\n[[ 28  64]\n [ 67 181]]\n[[ 28  64]\n [ 67 181]]\n[[ 28  64]\n [ 67 181]]\n[[ 3.62410648  2.22212408 -0.78346438 -1.08716504  0.20845132]\n [ 2.22212408  4.64366783  0.3063736  -2.02083479  0.70122984]\n [-0.78346438  0.3063736   2.01527431 -1.53216889  0.97774037]\n [-1.08716504 -2.02083479 -1.53216889  8.00519938  0.04706392]\n [ 0.20845132  0.70122984  0.97774037  0.04706392  2.17087504]]\n[[ 0.52578779 -0.21348907  0.38189146  0.09151966 -0.15551067]\n [-0.21348907  0.35188657 -0.07080487  0.04665133 -0.06228737]\n [ 0.38189146 -0.07080487  1.08941445  0.24549712 -0.50978238]\n [ 0.09151966  0.04665133  0.24549712  0.19692729 -0.13869583]\n [-0.15551067 -0.06228737 -0.50978238 -0.13869583  0.7283038 ]]\n[[ 1.00000000e+00 -1.56125113e-17  1.52655666e-16  1.73472348e-17\n   0.00000000e+00]\n [-1.80411242e-16  1.00000000e+00 -5.55111512e-17 -4.16333634e-17\n  -1.11022302e-16]\n [-1.38777878e-16 -6.93889390e-18  1.00000000e+00 -2.77555756e-17\n   1.11022302e-16]\n [ 6.85215773e-17  2.34187669e-17  1.04083409e-16  1.00000000e+00\n  -5.55111512e-17]\n [-1.11022302e-16 -2.77555756e-17 -2.22044605e-16 -1.11022302e-16\n   1.00000000e+00]]\n[[-0.81218031  0.47307556 -0.21573924 -0.20284707 -0.16991852]\n [-0.49798907 -0.74157594  0.42478879 -0.13036322 -0.06805821]\n [ 0.17557827 -0.34963627 -0.61563866 -0.39705448 -0.55701304]\n [ 0.2436391   0.28387627  0.52750692 -0.7475457  -0.15154582]\n [-0.04671498 -0.15307963 -0.34020076 -0.47474379  0.79578019]]\n[[-4.46219446 -4.58858101  0.41861064  3.56849309 -0.43678067]\n [ 0.         -3.18053014 -1.88706867  3.78527472 -1.08221187]\n [ 0.          0.         -2.0823704   4.52616545 -1.06273812]\n [ 0.          0.          0.         -4.91427039 -1.58770639]\n [ 0.          0.          0.          0.          1.09264868]]\n</pre> <p>\u5e38\u7528numpy.linalg\u51fd\u6570\uff1a</p> In\u00a0[628]: Copied! <pre>import numpy.linalg as la \nnp.diag(X) #\u63d0\u53d6\u5bf9\u89d2\u7ebf\u5143\u7d20\uff0c\u8fd4\u56de\u4e00\u7ef4\u6570\u7ec4\nnp.diag(np.diag(X)) #\u5c06\u4e00\u7ef4\u6570\u7ec4\u8f6c\u6362\u4e3a\u5bf9\u89d2\u77e9\u9635\nnp.dot(X, X) #\u77e9\u9635\u70b9\u4e58\nnp.trace(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u8ff9\uff0c\u5373\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\nla.det(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u884c\u5217\u5f0f\nla.eig(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\nla.svd(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u5947\u5f02\u503c\u5206\u89e3\nla.solve(X, np.eye(5)) #\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u7b49\u4ef7\u4e8einv(X)\nla.lstsq(X, np.eye(5)) #\u8ba1\u7b97\u6700\u5c0f\u4e8c\u4e58\u89e3\n</pre> import numpy.linalg as la  np.diag(X) #\u63d0\u53d6\u5bf9\u89d2\u7ebf\u5143\u7d20\uff0c\u8fd4\u56de\u4e00\u7ef4\u6570\u7ec4 np.diag(np.diag(X)) #\u5c06\u4e00\u7ef4\u6570\u7ec4\u8f6c\u6362\u4e3a\u5bf9\u89d2\u77e9\u9635 np.dot(X, X) #\u77e9\u9635\u70b9\u4e58 np.trace(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u8ff9\uff0c\u5373\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c la.det(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u884c\u5217\u5f0f la.eig(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf la.svd(X) #\u8ba1\u7b97\u77e9\u9635\u7684\u5947\u5f02\u503c\u5206\u89e3 la.solve(X, np.eye(5)) #\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u7b49\u4ef7\u4e8einv(X) la.lstsq(X, np.eye(5)) #\u8ba1\u7b97\u6700\u5c0f\u4e8c\u4e58\u89e3 <pre>/tmp/ipykernel_1781/1135300614.py:10: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.\nTo use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.\n  la.lstsq(X, np.eye(5)) #\u8ba1\u7b97\u6700\u5c0f\u4e8c\u4e58\u89e3\n</pre> Out[628]: <pre>(array([[ 0.16345489, -0.30935633, -0.00363317,  0.31533128,  0.55129115],\n        [-0.34979383,  0.33956777, -0.01878933, -0.32452163,  0.09250545],\n        [-0.14847072,  0.09710836, -0.68684146,  0.63956691,  0.42088459],\n        [-0.37063602, -0.10520303, -0.05440195,  0.18101641,  0.11296919],\n        [ 0.15863349, -0.51531551, -0.08843549, -0.59288156, -0.27974946]]),\n array([], dtype=float64),\n 5,\n array([3.13453315, 2.28891048, 1.78281616, 1.27127728, 0.77468344]))</pre> In\u00a0[629]: Copied! <pre>samples = np.random.normal(size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\nprint(samples)\nfrom numpy.random import randn\nprint(randn(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\n\nprint(np.random.seed(1234)) #\u8bbe\u7f6e\u968f\u673a\u6570\u79cd\u5b50\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u751f\u6210\u7684\u968f\u673a\u6570\u76f8\u540c\nprint(np.random.RandomState(1234).randn(10)) #\u751f\u6210\u4e00\u4e2a\u5341\u5143\u7d20\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\n</pre> samples = np.random.normal(size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4 print(samples) from numpy.random import randn print(randn(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4  print(np.random.seed(1234)) #\u8bbe\u7f6e\u968f\u673a\u6570\u79cd\u5b50\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u751f\u6210\u7684\u968f\u673a\u6570\u76f8\u540c print(np.random.RandomState(1234).randn(10)) #\u751f\u6210\u4e00\u4e2a\u5341\u5143\u7d20\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4 <pre>[[-1.32394447  1.27104725  1.71144687  0.19060071]\n [-0.67707467  0.6650217  -0.78651107  0.85539345]\n [ 0.74056602  1.01436411 -1.2105531   0.85342553]\n [-0.26891104  0.83437324  0.29345525  0.63362404]]\n[[-0.00809221 -0.29394491  1.40442768  0.19662991]\n [-0.5356608   1.01466235 -0.13719143  0.56030612]\n [-0.86751792  0.44276931 -0.49980499 -0.76927861]\n [ 1.49953772 -1.05878091  0.79703443  0.37213582]]\nNone\n[ 0.47143516 -1.19097569  1.43270697 -0.3126519  -0.72058873  0.88716294\n  0.85958841 -0.6365235   0.01569637 -2.24268495]\n</pre> <p>numpy.random\u7684\u90e8\u5206\u51fd\u6570\uff1a</p> In\u00a0[630]: Copied! <pre>np.random.seed(1234) #\u8bbe\u7f6e\u968f\u673a\u6570\u79cd\u5b50\nnp.random.permutation(10) #\u751f\u6210\u4e00\u4e2a0\u52309\u7684\u968f\u673a\u6392\u5217\nnp.random.shuffle(X) #\u5c06\u6570\u7ec4\u5143\u7d20\u968f\u673a\u6253\u4e71\u987a\u5e8f\nnp.random.rand(3, 2) #\u751f\u6210\u4e00\u4e2a3\u884c2\u5217\u7684\u5747\u5300\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\nnp.random.randint(0, 10, (3, 3)) #\u751f\u6210\u4e00\u4e2a3\u884c3\u5217\u76840\u52309\u7684\u968f\u673a\u6574\u6570\u6570\u7ec4\nnp.random.randn(4, 4) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\nnp.random.binomial(10, 0.5, size=10) #\u751f\u6210\u4e00\u4e2a\u5305\u542b10\u4e2a\u5143\u7d20\u7684\u4e8c\u9879\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3an=10\uff0cp=0.5\nnp.random.normal(size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\nnp.random.beta(a=2.0, b=5.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684Beta\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3aa=2.0\uff0cb=5.0\nnp.random.gamma(shape=2.0, scale=2.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684Gamma\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3ashape=2.0\uff0cscale=2.0\nnp.random.poisson(lam=3.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684Poisson\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3alam=3.0\nnp.random.exponential(scale=1.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6307\u6570\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3ascale=1.0\nnp.random.uniform(low=0.0, high=1.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u5747\u5300\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3alow=0.0\uff0chigh=1.0\nnp.random.chisquare(df=2.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u5361\u65b9\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3adf=2.0\n</pre> np.random.seed(1234) #\u8bbe\u7f6e\u968f\u673a\u6570\u79cd\u5b50 np.random.permutation(10) #\u751f\u6210\u4e00\u4e2a0\u52309\u7684\u968f\u673a\u6392\u5217 np.random.shuffle(X) #\u5c06\u6570\u7ec4\u5143\u7d20\u968f\u673a\u6253\u4e71\u987a\u5e8f np.random.rand(3, 2) #\u751f\u6210\u4e00\u4e2a3\u884c2\u5217\u7684\u5747\u5300\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4 np.random.randint(0, 10, (3, 3)) #\u751f\u6210\u4e00\u4e2a3\u884c3\u5217\u76840\u52309\u7684\u968f\u673a\u6574\u6570\u6570\u7ec4 np.random.randn(4, 4) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4 np.random.binomial(10, 0.5, size=10) #\u751f\u6210\u4e00\u4e2a\u5305\u542b10\u4e2a\u5143\u7d20\u7684\u4e8c\u9879\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3an=10\uff0cp=0.5 np.random.normal(size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4 np.random.beta(a=2.0, b=5.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684Beta\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3aa=2.0\uff0cb=5.0 np.random.gamma(shape=2.0, scale=2.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684Gamma\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3ashape=2.0\uff0cscale=2.0 np.random.poisson(lam=3.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684Poisson\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3alam=3.0 np.random.exponential(scale=1.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u6307\u6570\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3ascale=1.0 np.random.uniform(low=0.0, high=1.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u5747\u5300\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3alow=0.0\uff0chigh=1.0 np.random.chisquare(df=2.0, size=(4, 4)) #\u751f\u6210\u4e00\u4e2a4\u884c4\u5217\u7684\u5361\u65b9\u5206\u5e03\u968f\u673a\u6570\u6570\u7ec4\uff0c\u53c2\u6570\u4e3adf=2.0 Out[630]: <pre>array([[2.30154707, 5.54676118, 1.58241709, 0.36113555],\n       [1.34182708, 2.41398791, 1.0896079 , 0.39096286],\n       [3.04502764, 1.56686379, 3.04254334, 1.80056202],\n       [0.23121157, 0.02151064, 0.02662588, 1.20278634]])</pre> In\u00a0[631]: Copied! <pre>import gc\n\ndel mask, mat, names, points, q, r, randn, remainder, result, samples, values, whole_part, x, xarr, xs, y, yarr, ys, z\ngc.collect()\n</pre> import gc  del mask, mat, names, points, q, r, randn, remainder, result, samples, values, whole_part, x, xarr, xs, y, yarr, ys, z gc.collect() Out[631]: <pre>6759</pre> In\u00a0[632]: Copied! <pre>#\u7528random\u6a21\u5757\u5b9e\u73b0\u968f\u673a\u6f2b\u6b65\n\nimport random\n\nposition = 0\nsteps = 1000\nwalk = [position]\nfor i in range(steps):\n\tstep = 1 if random.randint(0, 1) else -1 #\u968f\u673a\u9009\u62e9\u524d\u8fdb\u4e00\u6b65\u6216\u540e\u9000\u4e00\u6b65\n\tposition += step\n\twalk.append(position)\n\nimport matplotlib.pyplot as plt\n\nplt.plot(walk[:100]) #\u7ed8\u5236\u524d100\u6b65\u7684\u968f\u673a\u6f2b\u6b65\u8def\u5f84\nplt.title(\"Random Walk (first 100 steps)\") #\u6dfb\u52a0\u6807\u9898\nplt.show()\n\n#\u7528numpy\u5b9e\u73b0\u968f\u673a\u6f2b\u6b65\n\nnsteps = 1000\ndraws = np.random.randint(0, 2, size=nsteps) #\u751f\u6210\u4e00\u4e2a\u5305\u542b1000\u4e2a0\u62161\u7684\u968f\u673a\u6574\u6570\u6570\u7ec4\nsteps = np.where(draws &gt; 0, 1, -1) #\u5c060\u66ff\u6362\u4e3a-1\uff0c1\u66ff\u6362\u4e3a1\nwalk = steps.cumsum() #\u8ba1\u7b97\u7d2f\u79ef\u548c\uff0c\u5f97\u5230\u968f\u673a\u6f2b\u6b65\u8def\u5f84\n\nprint((np.abs(walk) &gt;= 10).argmax()) #\u8ba1\u7b97\u9996\u6b21\u5230\u8fbe10\u6216-10\u7684\u4f4d\u7f6e\nplt.plot(walk[:100]) #\u7ed8\u5236\u524d100\u6b65\u7684\u968f\u673a\u6f2b\u6b65\u8def\u5f84\nplt.title(\"Random Walk (first 100 steps)\") #\u6dfb\u52a0\u6807\u9898\nplt.show()\n</pre> #\u7528random\u6a21\u5757\u5b9e\u73b0\u968f\u673a\u6f2b\u6b65  import random  position = 0 steps = 1000 walk = [position] for i in range(steps): \tstep = 1 if random.randint(0, 1) else -1 #\u968f\u673a\u9009\u62e9\u524d\u8fdb\u4e00\u6b65\u6216\u540e\u9000\u4e00\u6b65 \tposition += step \twalk.append(position)  import matplotlib.pyplot as plt  plt.plot(walk[:100]) #\u7ed8\u5236\u524d100\u6b65\u7684\u968f\u673a\u6f2b\u6b65\u8def\u5f84 plt.title(\"Random Walk (first 100 steps)\") #\u6dfb\u52a0\u6807\u9898 plt.show()  #\u7528numpy\u5b9e\u73b0\u968f\u673a\u6f2b\u6b65  nsteps = 1000 draws = np.random.randint(0, 2, size=nsteps) #\u751f\u6210\u4e00\u4e2a\u5305\u542b1000\u4e2a0\u62161\u7684\u968f\u673a\u6574\u6570\u6570\u7ec4 steps = np.where(draws &gt; 0, 1, -1) #\u5c060\u66ff\u6362\u4e3a-1\uff0c1\u66ff\u6362\u4e3a1 walk = steps.cumsum() #\u8ba1\u7b97\u7d2f\u79ef\u548c\uff0c\u5f97\u5230\u968f\u673a\u6f2b\u6b65\u8def\u5f84  print((np.abs(walk) &gt;= 10).argmax()) #\u8ba1\u7b97\u9996\u6b21\u5230\u8fbe10\u6216-10\u7684\u4f4d\u7f6e plt.plot(walk[:100]) #\u7ed8\u5236\u524d100\u6b65\u7684\u968f\u673a\u6f2b\u6b65\u8def\u5f84 plt.title(\"Random Walk (first 100 steps)\") #\u6dfb\u52a0\u6807\u9898 plt.show()  <pre>73\n</pre> In\u00a0[633]: Copied! <pre>nwalks = 5000\nnsteps = 1000\ndraws = np.random.randint(0, 2, size=(nwalks, nsteps)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b5000\u884c1000\u5217\u76840\u62161\u7684\u968f\u673a\u6574\u6570\u6570\u7ec4\nsteps = np.where(draws &gt; 0, 1, -1) #\u5c060\u66ff\u6362\u4e3a-1\uff0c1\u66ff\u6362\u4e3a1\nwalks = steps.cumsum(1) #\u8ba1\u7b97\u6bcf\u884c\u7684\u7d2f\u79ef\u548c\uff0c\u5f97\u52305000\u6761\u968f\u673a\u6f2b\u6b65\u8def\u5f84\n\nhits10 = (np.abs(walks) &gt;= 10).any(1) #\u5224\u65ad\u6bcf\u6761\u8def\u5f84\u662f\u5426\u5230\u8fbe10\u6216-10\nprint((np.abs(walks[hits10]) &gt;= 10).argmax(1)) #\u8ba1\u7b97\u6bcf\u6761\u8def\u5f84\u9996\u6b21\u5230\u8fbe10\u6216-10\u7684\u4f4d\u7f6e\nprint(hits10.sum()) #\u8ba1\u7b97\u6709\u591a\u5c11\u6761\u8def\u5f84\u5230\u8fbe10\u6216-10\n\nimport matplotlib.pyplot as plt\n\nplt.plot(walks[0]) #\u7ed8\u5236\u7b2c\u4e00\u6761\u968f\u673a\u6f2b\u6b65\u8def\u5f84\nplt.title(\"Random Walk (first walk)\") #\u6dfb\u52a0\u6807\u9898\nplt.show()\n</pre> nwalks = 5000 nsteps = 1000 draws = np.random.randint(0, 2, size=(nwalks, nsteps)) #\u751f\u6210\u4e00\u4e2a\u5305\u542b5000\u884c1000\u5217\u76840\u62161\u7684\u968f\u673a\u6574\u6570\u6570\u7ec4 steps = np.where(draws &gt; 0, 1, -1) #\u5c060\u66ff\u6362\u4e3a-1\uff0c1\u66ff\u6362\u4e3a1 walks = steps.cumsum(1) #\u8ba1\u7b97\u6bcf\u884c\u7684\u7d2f\u79ef\u548c\uff0c\u5f97\u52305000\u6761\u968f\u673a\u6f2b\u6b65\u8def\u5f84  hits10 = (np.abs(walks) &gt;= 10).any(1) #\u5224\u65ad\u6bcf\u6761\u8def\u5f84\u662f\u5426\u5230\u8fbe10\u6216-10 print((np.abs(walks[hits10]) &gt;= 10).argmax(1)) #\u8ba1\u7b97\u6bcf\u6761\u8def\u5f84\u9996\u6b21\u5230\u8fbe10\u6216-10\u7684\u4f4d\u7f6e print(hits10.sum()) #\u8ba1\u7b97\u6709\u591a\u5c11\u6761\u8def\u5f84\u5230\u8fbe10\u6216-10  import matplotlib.pyplot as plt  plt.plot(walks[0]) #\u7ed8\u5236\u7b2c\u4e00\u6761\u968f\u673a\u6f2b\u6b65\u8def\u5f84 plt.title(\"Random Walk (first walk)\") #\u6dfb\u52a0\u6807\u9898 plt.show() <pre>[123  67  49 ...  75  47  91]\n5000\n</pre>"},{"location":"md/numpy1/#numpy-ndarray","title":"Numpy ndarray\u00b6","text":""},{"location":"md/numpy1/#numpy","title":"Numpy \u6570\u7ec4\u7b97\u672f\u00b6","text":""},{"location":"md/numpy1/","title":"\u57fa\u7840\u7d22\u5f15\u4e0e\u5207\u7247\u00b6","text":""},{"location":"md/numpy1/","title":"\u5e03\u5c14\u7d22\u5f15\u00b6","text":""},{"location":"md/numpy1/","title":"\u795e\u5947\u7d22\u5f15\uff1a\u7528\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u6570\u636e\u7d22\u5f15\u00b6","text":""},{"location":"md/numpy1/","title":"\u6570\u636e\u8f6c\u7f6e\u548c\u6362\u8f74\u00b6","text":""},{"location":"md/numpy1/#ufunc","title":"ufunc\uff1a\u901a\u7528\u51fd\u6570\uff1a\u5feb\u901f\u7684\u9010\u5143\u7d20\u6570\u7ec4\u51fd\u6570\u00b6","text":"<p>\u5728ndarray\u6570\u636e\u4e2d\u8fdb\u884c\u9010\u5143\u7d20\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u4e00\u4e9b\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u91cf\u6570\u503c\uff0c\u4ea7\u751f\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u91cf\u6570\u503c\uff0c\u800c\u901a\u7528\u51fd\u6570\u5c31\u662f\u5bf9\u8fd9\u4e9b\u51fd\u6570\u7684\u5411\u91cf\u5316\u5c01\u88c5</p>"},{"location":"md/numpy1/","title":"\u4f7f\u7528\u6570\u7ec4\u8fdb\u884c\u9762\u5411\u6570\u7ec4\u7f16\u7a0b\u00b6","text":""},{"location":"md/numpy1/","title":"\u5c06\u6761\u4ef6\u903b\u8f91\u4f5c\u4e3a\u6570\u7ec4\u64cd\u4f5c\u00b6","text":""},{"location":"md/numpy1/","title":"\u6570\u5b66\u4e0e\u7edf\u8ba1\u65b9\u6cd5\u00b6","text":""},{"location":"md/numpy1/","title":"\u5e03\u5c14\u503c\u6570\u7ec4\u7684\u65b9\u6cd5\u00b6","text":""},{"location":"md/numpy1/","title":"\u6392\u5e8f\u00b6","text":""},{"location":"md/numpy1/","title":"\u552f\u4e00\u503c\u4e0e\u5176\u4ed6\u96c6\u5408\u903b\u8f91\u00b6","text":""},{"location":"md/numpy1/","title":"\u4f7f\u7528\u6570\u7ec4\u8fdb\u884c\u6587\u4ef6\u8f93\u5165\u548c\u8f93\u51fa\u00b6","text":""},{"location":"md/numpy1/","title":"\u7ebf\u6027\u4ee3\u6570\u00b6","text":""},{"location":"md/numpy1/","title":"\u4f2a\u968f\u673a\u6570\u751f\u6210\u00b6","text":""},{"location":"md/numpy1/","title":"\u793a\u4f8b\uff1a\u968f\u673a\u6f2b\u6b65\u00b6","text":""},{"location":"md/numpy1/","title":"\u4e00\u6b21\u6027\u6a21\u62df\u591a\u6b21\u968f\u673a\u6f2b\u6b65\u00b6","text":""},{"location":"md/pandas1/","title":"pandas","text":"In\u00a0[\u00a0]: Copied!"},{"location":"md/pandas1/","title":"\u6570\u636e\u7ed3\u6784\u00b6","text":""},{"location":"md/pandas1/#series","title":"Series\u00b6","text":""},{"location":"md/profile/","title":"\u5173\u4e8e\u6211","text":"ZUTOMATO - \u4e2a\u4eba\u4ecb\u7ecd ZUTOMATO <p>\u7b80\u5355\u7684\u4ecb\u7ecd\u55b5</p> \u4e2a\u4eba\u4fe1\u606f 1 \u4e13\u4e1a <p>\u6d59\u6c5f\u5927\u5b66\u6570\u5b66\u79d1\u5b66\u5b66\u9662  23\u7ea7\u7edf\u8ba1\u5b66\u672c\u79d1</p> 2 \u539f\u4e13\u4e1a <p>\u539f\u4e13\u4e1a\u5316\u5b66\uff0c\u73b0\u5fae\u8f85\u4fee\u4e5f\u4f1a\u5728\u8fd9\u91cc\u804a\u804a\u4e00\u4e9b\u5316\u5b66\u8bfe\u7684\u4f53\u9a8c</p> 3 \u6211\u662fTZM <p>\u6b22\u8fce\u627e\u6211\u7ea6\ud83c\udfd3</p> 4 \u97f3\u4e50 <p>\u6781\u7aef\u771f\u591c\u53a8\u4e50\u961f\u952e\u76d8\u624b</p> \u6211\u7684\u8054\u7cfb\u65b9\u5f0f QQ <p>2044581717</p> \u5fae\u4fe1 <p>q2044581717</p> \u7535\u8bdd <p>19883101612</p> \u90ae\u7bb1 <p>2044581717@qq.com</p> \u4e2a\u4eba\u8d26\u53f7 ZUTOMATO \u6211\u7684\u4e2a\u4ebaB\u7ad9\u8d26\u53f7 \u4e50\u961f\u8d26\u53f7 LilyPuffer \u6211\u7684\u4e50\u961fB\u7ad9\u8d26\u53f7 \u25cb\u795e                                  ID\uff1aGinger_Strings                                 UID\uff1a230727409                              \u5d29\u94c1                                  ID\uff1aZUTOMATO                                 UID\uff1a112136529                              zutomato <p>CC98</p> CC98\u4e3b\u9875 <p>\u00a9 ZUTOMATO 2025</p>"},{"location":"md/test/","title":"Test","text":"<p>asdawdasdwasdw</p>"},{"location":"md/music/demo/","title":"\u778e\u5199\u7684\u4e00\u4e9b\u4e1c\u897f","text":""},{"location":"md/music/demo/#k","title":"k","text":""},{"location":"md/music/demo/#j","title":"j","text":""},{"location":"md/music/demo/#f","title":"f","text":""},{"location":"md/music/demo/#d","title":"d","text":""},{"location":"md/music/demo/#b","title":"b","text":""},{"location":"md/music/sqlle/","title":"Sqlle","text":"<pre><code>SHOW DATABASES;\n</code></pre>"},{"location":"md/music/%E6%B7%B7%E9%9F%B3/","title":"\u6df7\u97f3","text":"<p>\u5e2e\u670b\u53cb\u6df7\u7684\u4e00\u9996\u6b4c\uff0c\u624d\u521a\u5f00\u59cb\u5b66\u6df7\u97f3www</p> <p>\u5728\u539f\u7248\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u6bb5\u95f4\u594f</p> <p> </p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/","title":"\u5b9e\u53d8\u51fd\u6570","text":""},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_2","title":"\u8bfe\u7a0b\u5bf9\u8c61","text":"<p>\u5927\u4e8c\u6625\u590f\u6570\u5b66\u4e0e\u5e94\u7528\u6570\u5b66\u5fc5\u4fee\u3001\u7edf\u8ba1\u5b66/\u4fe1\u606f\u4e0e\u8ba1\u7b97\u79d1\u5b66\u9009\u4fee</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_3","title":"\u4efb\u8bfe\u8001\u5e08","text":"<ul> <li> <p>\u674e\u79c9\u653f\uff1a\u636e\u8bf4\u4f5c\u4e1a\u6bd4\u8f83\u591a\uff0c\u5c0f\u6d4b\u4e3a\u7ebf\u4e0b\u7eb8\u8d28\uff0c\u9898\u76ee\u6bd4\u8f83\u57fa\u7840\uff0c\u80cc\u8bf5\u9ed8\u5199\u5c45\u591a\u3002</p> </li> <li> <p>\u8d3e\u539a\u7389\uff1a\u6211\u7684\u8001\u5e08\uff0c\u5c0f\u6d4b\u4e3a\u968f\u580215\u5206\u949f\u5de6\u53f3\uff0c8\u9053\u5de6\u53f3\u9009\u62e9\u9898\uff0c\u9898\u76ee\u4e0d\u7b97\u7279\u522b\u96be\uff0c\u6709\u5355\u9009/\u591a\u9009\uff0c\u4e14\u4e3a\u4e0d\u5b9a\u671f\u7a81\u51fb\u5c0f\u6d4b\uff1b\u4f1a\u7a81\u51fb\u6570\u5b57\u70b9\u540d\u4e14\u4e0d\u5141\u8bb8\u8bfe\u540e\u8865\u7b7e\u3002\u636e\u4ed6\u81ea\u79f0\u5e73\u65f6\u5206\u53d7\u671f\u672b\u8003\u5f71\u54cd\u5f88\u5927\uff0c\u5982\u679c\u671f\u672b\u8003\u5f97\u597d\u5e73\u65f6\u5206\u5c31\u4f1a\u62c9\u6ee1\uff0c\u5c31\u7b97\u5c0f\u6d4b\u548c\u70b9\u540d\u90fd\u6ca1\u5230\uff0c\u53cd\u4e4b\u671f\u672b\u8003\u8003\u5f97\u5f88\u5dee\u7684\u8bdd\u4e0d\u7ba1\u5e73\u65f6\u600e\u4e48\u6837\u4e5f\u4f1a\u6302\u3002</p> </li> </ul>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_4","title":"\u524d\u7f6e\u8bfe\u7a0b","text":"<p>\u6570\u5b66\u5206\u6790\u4e00\u4e8c\u4e09\u6216\u66f4\u9ad8\u7ea7\u7684\u6570\u5b66\u5206\u6790\u8bfe\u7a0b\uff08\u6570\u5206H\u548c\u5206\u6790\u5b66\uff09\uff0c\u5982\u679c\u5b66\u8fc7\u70b9\u96c6\u62d3\u6251\u4f1a\u5bf9\u5b9e\u53d8\u7684\u5b66\u4e60\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\uff0c\u4e0d\u8fc7\u975e\u5fc5\u987b\u3002</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_5","title":"\u8bfe\u7a0b\u7279\u70b9","text":"<p>\u5b9e\u53d8\u7684\u96be\u5ea6\u5373\u4f7f\u653e\u5728\u6570\u5b66\u4e13\u4e1a\u8bfe\u4e2d\u4e5f\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u867d\u7136\u8001\u5e08\u8bb2\u8bfe\u5f88\u597d\uff0c\u7ed9\u5206\u4e5f\u5f88\u597d\uff0c\u4f46\u662f\u60f3\u8981\u771f\u6b63\u5b66\u5f97\u597d\u6211\u8ba4\u4e3a\u8fd8\u662f\u6709\u5f88\u5927\u96be\u5ea6\uff0c\u4e0d\u5efa\u8bae\u975e\u5fc5\u4fee\u7684\u4e13\u4e1a\u9009\u4fee\u4e0d\u8fc7\u5982\u679c\u7edf\u8ba1\u5b66\u4e13\u4e1a\u7684\u540c\u5b66\u60f3\u5b66\u597d\u6982\u7387\u8bba\u90a3\u4e48\u5341\u5206\u5efa\u8bae\u9009\u4fee\u8fd9\u95e8\u8bfe\u7a0b\u3002</p> <p>\u5173\u4e8e\u5b9e\u53d8\u51fd\u6570\uff0c\u5b9e\u53d8\u548c\u6570\u5206\u7684\u5173\u7cfb\u662f\u4e00\u5b9a\u8981\u63d0\u5230\u7684\u3002\u6211\u81ea\u5df1\u5bf9\u8fd9\u95e8\u8bfe\u7a0b\u7684\u7406\u89e3\u662f\uff0c\u5b9e\u53d8\u662f\u5bf9\u6570\u5206\u4e2d\u7684\u5185\u5bb9\u7684\u5b8c\u5584\u3002\u6570\u5206\u7814\u7a76\u7684\u662f\u6027\u8d28\u6781\u597d\u7684\u5bf9\u8c61\uff08\u8fde\u7eed/\u53ef\u5bfc\u51fd\u6570\u3001\u5b8c\u6574\u7684\u533a\u95f4\u7b49\uff09\uff0c\u800c\u5b9e\u53d8\u7814\u7a76\u7684\u8303\u56f4\u62d3\u5c55\u5230\u4e86\u6027\u8d28\u201c\u6ca1\u8fd9\u4e48\u597d\u201d\u7684\u5bf9\u8c61\uff08\u53ef\u6d4b\u51fd\u6570\u3001\u53ef\u6d4b\u96c6\u7b49\uff09\uff0c\u5f97\u51fa\u7684\u7ed3\u8bba\u5c31\u4f1a\u66f4\u4e00\u822c\uff0c\u4e5f\u4e0d\u80fd\u7528\u6570\u5206\u4e2d\u60ef\u7528\u7684\u601d\u7ef4\u6765\u601d\u8003\u5b9e\u53d8\u4e2d\u7684\u5f88\u591a\u95ee\u9898\u3002\u5f53\u7136\uff0c\u6570\u5206\u4e2d\u7684\u5f88\u591a\u65b9\u6cd5\u5728\u5b9e\u53d8\u5f53\u4e2d\u4e5f\u662f\u7ecf\u5e38\u4f7f\u7528\u7684\uff0c\u6bd5\u7adf\u540c\u4e3a\u5206\u6790\u7c7b\u8bfe\u7a0b\uff0c\u201c\u505a\u4f30\u8ba1\u201d\u8fd9\u6837\u7684\u4e8b\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002</p> <p>\u7edf\u8ba1\u5b66\u7684\u540c\u5b66\u662f\u5148\u5b66\u4e86\u6982\u7387\u8bba\u518d\u5b66\u8fd9\u95e8\u8bfe\u7684\uff0c\u53ef\u80fd\u5728\u6982\u7387\u8bba\u4e2d\u6709\u4e9b\u4e1c\u897f\u6ca1\u6709\u5f88\u6df1\u7684\u6d89\u53ca\uff0c\u53ef\u4ee5\u5728\u5b66\u4e60\u5b9e\u53d8\u7684\u65f6\u5019\u56de\u53bb\u770b\u4e00\u770b\uff0c\u4e5f\u53ef\u4ee5\u4ece\u6982\u7387\u8bba\u7684\u89d2\u5ea6\u5ba1\u89c6\u4e00\u4e0b\u5b9e\u53d8\u7684\u5185\u5bb9\u3002</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_6","title":"\u8bfe\u7a0b\u5185\u5bb9","text":"<p>\u6574\u4f53\u6765\u8bf4\uff0c\u5b9e\u53d8\u7684\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u51e0\u4e2a\u90e8\u5206\uff1a</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#r","title":"\u211d\u4e2d\u7684\u62d3\u6251","text":"<p>\u8fd9\u91cc\u8003\u8bd5\u662f\u4e0d\u8003\u7684\uff0c\u4f46\u662f\u5b66\u597d\u7684\u8bdd\u5bf9\u540e\u9762\u7684\u5185\u5bb9\u6765\u8bf4\u5e2e\u52a9\u5f88\u5927\uff0c\u6bd5\u7adf\u662f\u6700\u57fa\u7840\u7684\u90e8\u5206\uff0c\u5c0f\u6d4b\u4e5f\u4f1a\u6d89\u53ca\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u5b66\u8fc7\u70b9\u62d3\u7684\u540c\u5b66\u5bf9\u4ed8\u8d77\u6765\u4f1a\u5f88\u8f7b\u677e\u3002</p> <p>\u4e3b\u8981\u5185\u5bb9\u662f\u5f00\u96c6\u3001\u95ed\u96c6\u7684\u7b49\u5b9a\u4e49\u548c\u6027\u8d28\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u6700\u91cd\u8981\u7684\u6211\u8ba4\u4e3a\u662f\u5f00\u96c6\u7684\u7ed3\u6784\u5b9a\u7406\uff0c\u53ef\u4ee5\u628a\u5f00\u96c6\u5206\u89e3\u6210\u53ef\u6570\u4e2a\u5f00\u533a\u95f4\u6765\u7814\u7a76\u3002</p> <p>\u6b64\u5916\u8fd9\u91cc\u8fd8\u6784\u9020\u4e86\\(Cantor\\)\u96c6\u548c\\(Cantor\\)\u51fd\u6570\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u8fd9\u4e2a\u7ecf\u5178\u7684\u4f8b\u5b50\uff0c\u5728\u5b9e\u53d8\u51fd\u6570\u4e2d\u5f88\u591a\u53cd\u4f8b\u90fd\u8981\u7528\u8fd9\u4e2a\u6765\u6784\u9020\u3002</p> <p>\u8fde\u7eed\u51fd\u6570\u4e5f\u4f1a\u5728\u8fd9\u91cc\u8bb2\u5230\uff0c\u4f1a\u7528\u65b0\u7684\u65b9\u5f0f\u5b9a\u4e49\u8fde\u7eed\u51fd\u6570\u3002</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_7","title":"\u53ef\u6d4b\u96c6\u548c\u6d4b\u5ea6","text":"<p>\u4ece\u8fd9\u91cc\u5f00\u59cb\u5185\u5bb9\u5c31\u5f00\u59cb\u9010\u6e10\u53d8\u5f97\u62bd\u8c61\u4e86</p> <p>\u9996\u5148\u662f\u52d2\u8d1d\u683c\u5916\u6d4b\u5ea6\uff0c\u6700\u9700\u8981\u6ce8\u610f\u7684\u662f\u96c6\u5408\u7684\u6d4b\u5ea6\u4e3a\\(m\\)\u7684\u5145\u8981\u6761\u4ef6</p> <p>\u7136\u540e\u662f\u53ef\u6d4b\u96c6\u548c\u6d4b\u5ea6\u7684\u5b9a\u4e49\u548c\u6027\u8d28\uff0c\u9700\u8981\u6ce8\u610f\u53ef\u6d4b\u96c6\u548c\u5f00\u96c6\u3001\u95ed\u96c6\u7684\u5173\u7cfb\uff0c\u91cd\u70b9\u662f\u7528\u5f00\u96c6\u548c\u95ed\u96c6\u6765\u903c\u8fd1\u53ef\u6d4b\u96c6\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u4e00\u4e2a\u53ef\u6d4b\u96c6\u201c\u5dee\u4e0d\u591a\u201d\u662f\u4e00\u4e2a\u5f00\u96c6\u6216\u8005\u95ed\u96c6\uff0c\u201c\u51e0\u4e4e\u5904\u5904\u201d\u662f\u4e00\u4e2a \\(G_\\delta\\) \u96c6\u6216 \\(F_\\sigma\\) \u96c6\u3002\u4f46\u8bf7\u6ce8\u610f\u8fd9\u91cc\u7684\u201c\u5dee\u4e0d\u591a\u201d\u7684\u610f\u601d\uff0c\u4e0d\u8981\u548c\u201c\u51e0\u4e4e\u5904\u5904\u201d\u7684\u610f\u601d\u641e\u6df7\uff0c\u540e\u9762\u7684 \\(Lusin\\) \u5b9a\u7406\u4e5f\u8868\u660e\uff0c\u4e00\u4e2a\u53ef\u6d4b\u51fd\u6570\u201c\u5dee\u4e0d\u591a\u201d\u662f\u4e00\u4e2a\u8fde\u7eed\u51fd\u6570\u3002</p> <p>\u6b64\u5916\u5c31\u662f\u8981\u6ce8\u610f\u5916\u6d4b\u5ea6\u7684\u6b21\u53ef\u52a0\u6027\uff0c\u6d4b\u5ea6\u7684\u53ef\u6570\u53ef\u52a0\u6027\u7b49\u6027\u8d28\u3002</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_8","title":"\u53ef\u6d4b\u51fd\u6570","text":"<p>\u8fd9\u4e00\u90e8\u5206\u8981\u6ce8\u610f\u7684\u5c31\u662f\u5404\u79cd\u6536\u655b\uff1a\u51e0\u4e4e\u5904\u5904\u6536\u655b\u3001\u8fd1\u4e00\u81f4\u6536\u655b\u3001\u4f9d\u6d4b\u5ea6\u6536\u655b\u8fd9\u4e09\u4e2a\u6982\u5ff5\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\\(Egorroff\\) \u5b9a\u7406\u3001\\(Riesz\\) \u5b9a\u7406\u3001\\(Lusin\\) \u5b9a\u7406\u7684\u7406\u89e3\u548c\u8bc1\u660e\u5341\u5206\u91cd\u8981\u3002</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_9","title":"\u52d2\u8d1d\u683c\u79ef\u5206\u53ca\u5176\u6781\u9650","text":"<p>\u8fd9\u91cc\u662f\u8fd9\u95e8\u8bfe\u7a0b\u6700\u91cd\u8981\u7684\u90e8\u5206\u6211\u628a\u540e\u9762\u7684\u201c\u5fae\u5206\u4e0e\u79ef\u5206\u201d\u548c \\(L^p\\) \u7a7a\u95f4\u4e5f\u653e\u5230\u4e86\u8fd9\u4e00\u90e8\u5206</p> <p>\u9996\u5148\u662f\u52d2\u8d1d\u683c\u79ef\u5206\u7684\u5b9a\u4e49\uff0c\u8fd9\u91cc\u7684\u5b9a\u4e49\u6211\u8ba4\u4e3a\u5f88\u6709\u5b9e\u53d8\u7684\u5473\u9053\uff0c\u5bf9\u4e8e\u4e00\u822c\u53ef\u6d4b\u51fd\u6570\u7684\u5b9a\u4e49\u6211\u4eec\u5206\u4e86\u5f88\u591a\u6b65\uff0c\u4ece\u975e\u8d1f\u7b80\u5355\u51fd\u6570\uff0c\u5230\u975e\u8d1f\u53ef\u6d4b\u51fd\u6570\uff0c\u518d\u5230\u4e00\u822c\u53ef\u6d4b\u51fd\u6570\uff0c\u91cd\u8981\u7684\u601d\u60f3\u662f\u7528\u7b80\u5355\u51fd\u6570\u6765\u903c\u8fd1\u53ef\u6d4b\u51fd\u6570\uff0c\u7531\u6d45\u5165\u6df1\u5730\u7814\u7a76\u3002</p> <p>\u5176\u5b9e\u7528\u7b80\u5355\u51fd\u6570\u6765\u9010\u6e10\u5b9a\u4e49\u53ef\u6d4b\u51fd\u6570\u7684\u79ef\u5206\u4e5f\u4e0d\u96be\u7406\u89e3\uff0c\u4ece\u6570\u5206\u4e2d\u9ece\u66fc\u79ef\u5206\u7684\u5b9a\u4e49\u6765\u7406\u89e3\uff0c\u9ece\u66fc\u79ef\u5206\u662f\u628a\u533a\u95f4\u5206\u5272\u6210\u5c0f\u533a\u95f4\u6c42\u77e9\u5f62\u9762\u79ef\u548c\uff0c\u662f\u7ad6\u7740\u5207\u5272\u7684\uff0c\u800c\u52d2\u8d1d\u683c\u79ef\u5206\u662f\u6a2a\u7740\u5207\u5272\u7684\uff0c\u5207\u5272\u7684\u662f\u51fd\u6570\u7684\u503c\u57df\uff0c\u518d\u6c42\u77e9\u5f62\u9762\u79ef\u548c\u3002</p> <p>\u8981\u8bf4\u5b9e\u53d8\u51fd\u6570\u6700\u91cd\u8981\u7684\uff0c\u4e00\u5b9a\u662f\u79ef\u5206\u6781\u9650\u5b9a\u7406\uff1a\\(Levi\\) \u5355\u8c03\u6536\u655b\u5b9a\u7406\u3001\\(Fatou\\) \u5f15\u7406\u3001\u63a7\u5236\u6536\u655b\u5b9a\u7406\u7684\u7406\u89e3\u3001\u5e94\u7528\u548c\u8bc1\u660e\u662f\u6700\u91cd\u8981\u7684\uff0c\u8981\u6ce8\u610f\u8fd9\u4e09\u4e2a\u5b9a\u7406\u7684\u6761\u4ef6\u6709\u4f55\u4e0d\u540c\uff0c\u662f\u5426\u8981\u6c42\u975e\u8d1f\uff0c\u975e\u8d1f\u662f\u975e\u5e38\u5173\u952e\u7684\u4e00\u4e2a\u6761\u4ef6\uff0c\u4f46\u6709\u65f6\u4e0d\u4f1a\u76f4\u63a5\u7ed9\u51fa\uff0c\u800c\u662f\u7ed9\u51fa\u4e00\u4e2a\u51fd\u6570\u88ab\u53e6\u4e00\u4e2a\u51fd\u6570\u7684\u7edd\u5bf9\u503c\u63a7\u5236\uff0c\u90a3\u4e48\u5c31\u50cf\u63a7\u5236\u6536\u655b\u5b9a\u7406\u7684\u8bc1\u660e\u4e2d\u7684\u90a3\u6837\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u51fd\u6570\u4f5c\u548c\u3001\u4f5c\u5dee\u6765\u5f97\u5230\u975e\u8d1f\u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528\u524d\u4e24\u4e2a\u5b9a\u7406\u6765\u89e3\u51b3\u95ee\u9898\u4e86\u3002</p> <p>\u5728\u201c\u5fae\u5206\u4e0e\u79ef\u5206\u201d\u8fd9\u4e00\u7ae0\u4e2d\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e09\u79cd\u51fd\u6570\u548c\u4e0d\u5b9a\u79ef\u5206\uff1a\u5355\u8c03\u51fd\u6570\u3001\u6709\u754c\u53d8\u5dee\u51fd\u6570\u548c\u7edd\u5bf9\u8fde\u7eed\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u51e0\u4e2a\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u6bd4\u5982\u8bf4 \\(Jordan\\) \u5206\u89e3\u3002</p> <p>\u81f3\u4e8e \\(L^p\\) \u7a7a\u95f4\uff0c\u53ef\u4ee5\u6ce8\u610f\u4e00\u4e0b\u90a3\u51e0\u4e2a\u4e0d\u7b49\u5f0f\u7684\u5e94\u7528\uff0c\u6b64\u5916\u5173\u6ce8\u4e00\u4e0b\u5377\u79ef\u76f8\u5173\u7684\u6027\u8d28\uff0825\u5e74\u8003\u4e86www\uff09\u3002</p>"},{"location":"md/note/math/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/#_10","title":"\u8003\u8bd5\u76f8\u5173","text":"<p>\u5b9e\u53d8\u7684\u8003\u8bd5\u4e3b\u8981\u4ee5\u8bfe\u672c\u4e60\u9898\u548c\u5b9a\u4e49\u5b9a\u7406\u53d9\u8ff0\u8bc1\u660e\u4e3a\u4e3b\uff0c\u60f3\u4e0d\u6302\u79d1\u5176\u5b9e\u8fd8\u662f\u4e0d\u7b97\u96be\u7684\uff0c\u4e3b\u8981\u662f\u8981\u628a\u8bfe\u672c\u7684\u5185\u5bb9\u719f\u6089\u900f\uff0c\u5c31\u80fd\u505a\u5bf9\u8003\u8bd5\u9898\u768480%\u751a\u81f3\u66f4\u591a\u3002</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/","title":"\u5e38\u5fae\u5206\u65b9\u7a0b","text":""},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#_2","title":"\u8bfe\u7a0b\u5bf9\u8c61","text":"<p>\u5927\u4e8c\u79cb\u51ac\u6570\u5b66\u4e0e\u5e94\u7528\u6570\u5b66/\u4fe1\u606f\u4e0e\u8ba1\u7b97\u79d1\u5b66\u5fc5\u4fee\u3001\u7edf\u8ba1\u5b66\u9009\u4fee</p> <p>\u8bf7\u6ce8\u610f\u8fd9\u91cc\u662f3.5\u5206\u7684\u666e\u901a\u6570\u5b66\u9662\u4e13\u4e1a\u8bfe\uff0c\u4e0d\u662f\u5e38\u5fae\u5206\u65b9\u7a0b\uff08\u7532\uff09\uff0c\u4e5f\u4e0d\u662f1\u5b66\u5206\u62161.5\u5b66\u5206\u7684\u3002</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#_3","title":"\u4efb\u8bfe\u8001\u5e08","text":"<p>\u6211\u4e0a\u7684\u662f\u6625\u590f\u5b66\u671f\u7684ODE\uff0c\u53ea\u6709\u9648\u7426\u8001\u5e08\u4e00\u4e2a\u73ed\uff0c\u662f\u65b0\u8001\u5e08\uff0c\u5c0f\u6d4b\u4e24\u6b21\uff0c\u96be\u5ea6\u4e0d\u7b97\u5927\u4f46\u662f\u7531\u4e8e\u662f\u65b0\u8001\u5e08\u53ef\u80fd\u9898\u91cf\u63a7\u5236\u5f97\u4e0d\u662f\u5f88\u5408\u9002\uff1b\u8003\u8bd5\u548c\u4f5c\u4e1a\u9898\u91cf\u6bd4\u8f83\u591a\uff0c\u8001\u5e08\u4f1a\u8bb2\u5927\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u5305\u62ec \\(Laplace\\) \u53d8\u6362\uff0c\u5c0f\u6d4b\u4e5f\u4f1a\u8003\uff0c\u4f46\u662f\u671f\u672b\u8003\u70b9\u7f29\u6c34\u4e86\u5f88\u591a\u3002</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#_4","title":"\u524d\u7f6e\u8bfe\u7a0b","text":"<p>\u6570\u5b66\u5206\u6790\u4e00\u4e8c\u3001\u9ad8\u7b49\u4ee3\u6570\u4e0e\u89e3\u6790\u51e0\u4f55\u4e00\u4e8c\uff08\u6216\u66f4\u9ad8\u7ea7\u7684\u8bfe\u7a0b\uff09</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#_5","title":"\u8bfe\u7a0b\u7279\u70b9","text":"<p>ODE\u662f\u4e00\u95e8\u6280\u5de7\u6027\u6bd4\u8f83\u5f3a\u3001\u8ba1\u7b97\u91cf\u6bd4\u8f83\u5927\u7684\u8bfe\u7a0b\uff0c\u6211\u8ba4\u4e3a\u96be\u5ea6\u7b97\u6570\u5b66\u9662\u4e13\u4e1a\u8bfe\u91cc\u6700\u7b80\u5355\u7684\u4e4b\u4e00\u3002 \u9700\u8981\u8f83\u591a\u7684\u5206\u6790\u548c\u4ee3\u6570\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u60f3\u8981\u5b66\u597d\u7684\u8bdd\u6570\u5206\u9ad8\u4ee3\u80af\u5b9a\u8981\u5b66\u597d\u3002</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#_6","title":"\u8bfe\u7a0b\u5185\u5bb9","text":"<p>\u8fd9\u95e8\u8bfe\u5185\u5bb9\u5f88\u591a\uff0c\u8001\u5e08\u8bb2\u7684\u4e3b\u8981\u5206\u4e3a\u4e86\u4e09\u5757\u5185\u5bb9\uff1a - \u89e3ODE - \u5206\u6790ODE - \u7b80\u5355\u7684PDE</p> <p>3.5\u5b66\u5206\u4e00\u4e0b\u7684\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u662f\u7b2c\u4e00\u90e8\u5206\uff0c\u800c\u8fd9\u95e8\u8bfe\u7684\u96be\u5ea6\u4e5f\u96c6\u4e2d\u5728\u7b2c\u4e8c\u90e8\u5206\uff0c\u7b2c\u4e09\u90e8\u5206\u671f\u672b\u548c\u5c0f\u6d4b\u90fd\u4e0d\u4f1a\u6d89\u53ca\u3002</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#ode","title":"\u89e3ODE\uff1a\u8ba1\u7b97","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u6d89\u53ca\u4e00\u9636\u65b9\u7a0b\u548c\u9ad8\u9636\u65b9\u7a0b\u7ec4\uff0c\u53c8\u7ec6\u5206\u6210\u4e86\u4e00\u9636\u7ebf\u6027\u65b9\u7a0b\u7ec4\u3001\u4e00\u9636\u975e\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7b49\u3002</p> <p>\u91cd\u70b9\u662f\u5feb\u901f\u5224\u65ad\u65b9\u7a0b\u7c7b\u578b\u5e76\u4e14\u7262\u8bb0\u65b9\u6cd5\uff0c\u5728\u8003\u8bd5\u65f6\u5c3d\u91cf\u522b\u4e22\u8fd9\u4e00\u90e8\u5206\u7684\u5206\u3002</p> <p>\\(Laplace\\) \u53d8\u6362\u6cd5\u53ef\u80fd\u4e0d\u662f\u6240\u6709\u8001\u5e08\u90fd\u4f1a\u5c06\u8bb2\uff0c\u4f46\u6211\u8ba4\u4e3a\u5982\u679c\u638c\u63e1\u7684\u8bdd\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u505a\u6551\u6025\u7528\u3002</p>"},{"location":"md/note/math/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#ode_1","title":"\u5206\u6790ODE","text":"<p>\u8fd9\u91cc\u662f\u672c\u8bfe\u7a0b\u6bd4\u8f83\u62bd\u8c61\u7684\u90e8\u5206\uff0c\u4e3b\u8981\u5305\u62ec\u4e86\u89e3\u7684\u5b58\u5728\u552f\u4e00\u6027\u3001\u5ef6\u62d3\u6027\u3001\u8fde\u7eed\u4f9d\u8d56\u6027\u548c\u674e\u96c5\u666e\u8bfa\u592b\u7a33\u5b9a\u6027\uff0c\u8003\u8bd5\u7684\u4e3b\u8981\u96be\u5ea6\u96c6\u4e2d\u5728\u8fd9\u4e9b\u77e5\u8bc6\u70b9\uff0c\u9700\u8981\u591a\u770b\u8bc1\u660e\u3002  </p>"}]}